'AGE',	'Youngest and Oldest may have higher risk of accident',
'BLUEBOOK',	'Unknown on probability of collision but correlated with payout',
'CAR_AGE',	'Unknown on probability of collision but correlated with payout',
'CAR_TYPE',	'Unknown on probability of collision but correlated with payout',
'CAR_USE', 'Commerical vehicles might increase risk of accident',
'CLM_FREQ',	'Higher claim frequency increases likelihood of future claims',
'EDUCATION',	'Theoretically higher education levels lower risk',
'HOMEKIDS',	'Unknown',
'HOME_VAL',	'Theoretically home owners reduce risk due to more responsible driving',
'INCOME',	'Theoretically wealthier drivers have fewer accidents',
'JOB',	'Theoretically white collar+ jobs are safer',
'KIDSDRIV',	'Increased risk of accident from inexperienced driver',
'MSTATUS',	'Theoretically married people drive safer',
'MVR_PTS',	'Increased risk of accident',
'OLDCLAIM',	'Increased risk of higher payout with previous payout',
'PARENT1',	'Unknown',
'RED_CAR',	'Theoretically increased risk of accident based on urban legend',
'REVOKED',	'Increased risk of accident if revoked',
'SEX',	'Theoretically increased risk of accident for women based on urban legend',
'TIF',	'Decreased risk for those who have greater loyalty',
'TRAVETIME',	'Longer distances increase risk of accident',
'URBANICITY',	'The more urban the area the greater the risk of accident',
'YOJ', 'Decreased risk for those with greater longevity'
),  byrow = TRUE, ncol = 2))
colnames(vareffects) <- c('Variable', 'Effect')
kbl(vareffects, booktabs = T, caption = "Theoretical Variable Effects") %>%
kable_styling(latex_options = c("striped", "HOLD_position"), full_width = F)
tdata.nas <- lapply(tdata, function(x) sum(is.na(x)))
tdata.len <- lapply(tdata, function(x) length(x))
tdata.permis <- lapply(tdata, function(x) round(sum(is.na(x))/length(x)*100, 1))
tdata.types <- lapply(tdata, function(x) class(x))
tdata.firstob <- lapply(tdata, function(x) head(x, 1))
tdata.uniques <- lapply(tdata, function(x) length(unique(factor(x))))
tdata.tbl.natypes <- cbind(tdata.nas, tdata.len, tdata.permis, tdata.types, tdata.firstob, tdata.uniques)
colnames(tdata.tbl.natypes) <- c("Missing", "Total", "%", "Data Type", "Example", "Factors")
kbl(tdata.tbl.natypes, booktabs = T, caption = "Data Characteristics") %>%
kable_styling(latex_options = c("striped", "HOLD_position"), full_width = F)
tdata.summary.tbl <- summary(tdata)
kbl(t(tdata.summary.tbl), booktabs = T, caption = "Summary Characteristics") %>%
kable_styling(latex_options = c("striped", "scale_down", "hold_position"), full_width = F)
tdata %>%
select_if(is.numeric) %>%
gather %>%
ggplot() +
facet_wrap(~ key, scales = "free") +
geom_density(aes(value, color = value, fill = key, alpha = .5)) + theme(axis.title = element_blank(), legend.position = "none") + ggtitle("Numeric Variable Density") + theme(plot.title = element_text(hjust = 0.5))
tdata %>%
select_if(is.numeric) %>%
gather %>%
ggplot(aes(value, key)) +
facet_wrap(~ key, scales = "free") +
geom_violin(aes(color = key, alpha = 1)) +
geom_boxplot(aes(fill = key, alpha = .5), notch = TRUE, size = .1, lty = 3) +
stat_summary(fun.y = mean, geom = "point",
shape = 8, size = 1.5, color = "#000000") +
theme(axis.text = element_blank(),
axis.title = element_blank(),
legend.position = "none") +
ggtitle("Numeric Variable KDE & Distribution") +
theme(plot.title = element_text(hjust = 0.5))
tdata %>%
select_if(is.integer) %>%
gather() %>%
filter(value == 0 | 1) %>%
group_by(key) %>%
ggplot() +
facet_wrap(~ key, scales = "free") +
geom_bar(aes(value, color = value, fill = key, alpha = .5)) + theme(axis.title = element_blank(), legend.position = "none") + ggtitle("Integer Frequencies") + theme(plot.title = element_text(hjust = 0.5))
tdata %>%
dplyr::select(TARGET_FLAG, MVR_PTS, CLM_FREQ, HOMEKIDS, KIDSDRIV, TIF) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_bar(aes(value, color = key, fill = key, alpha = .5)) + theme(axis.title = element_blank(), legend.position = "none") + ggtitle("Select Integer Frequencies") + theme(plot.title = element_text(hjust = 0.5))
tdata %>%
select_if(is.numeric) %>%
cor() %>%
ggcorrplot(method = "circle", type="upper",
ggtheme = ggplot2::theme_minimal, legend.title = "Influence") + coord_flip()
# Select character variables
chars <- tdata %>%
dplyr::select_if(is.character)
# Use function to extract dollars
to_num <- function(x){
x <- as.character(x)
x <- gsub(",", "", x)
x <- gsub("\\$", "", x)
as.numeric(x)
}
# Specify those dollar variables
income.values <- to_num(chars$INCOME)
home.values <- to_num(chars$HOME_VAL)
bluebook.values <- to_num(chars$BLUEBOOK)
oldclaim.values <- to_num(chars$OLDCLAIM)
concept_df <- as.data.frame(cbind(income.values,
home.values,
bluebook.values,
oldclaim.values))
income.values.stat <- to_num(chars$INCOME)
home.values.stat <- to_num(chars$HOME_VAL)
bluebook.values.stat <- to_num(chars$BLUEBOOK)
oldclaim.values.stat <- to_num(chars$OLDCLAIM)
# impute median values for missing variables
income.values[is.na(income.values)] <-
median(income.values, na.rm = TRUE)
home.values[is.na(home.values)] <-
median(home.values, na.rm = TRUE)
bluebook.values[is.na(bluebook.values)] <-
median(bluebook.values, na.rm = TRUE)
oldclaim.values[is.na(oldclaim.values)] <-
median(oldclaim.values, na.rm = TRUE)
# Recombine into data frame
dollar.values <-
data.frame(cbind(income.values,
home.values,
bluebook.values,
oldclaim.values))
dollar.values.stats <-
data.frame(cbind(income.values.stat,
home.values.stat,
bluebook.values.stat,
oldclaim.values.stat))
# Join with training data
tdata <- data.frame(cbind(tdata, dollar.values))
tdata %>%
dplyr::select(is.factor) %>%
dplyr::select("car_type", "education", "job") %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, nrow = 3, scales = "free") +
geom_bar(aes(, fill = key )) + theme(axis.title = element_blank(), axis.text.x = element_blank(), legend.position = "none") + coord_flip() + ggtitle("Nonbinary Classifiers") + theme(plot.title = element_text(hjust = 0.5))
knitr::opts_chunk$set(echo = TRUE)
# Packages
library(tidyverse)
library(kableExtra)
library(ggcorrplot)
library(reshape2)
library(bestNormalize)
library(caret)
library(MASS)
library(pROC)
library(stats)
library(ROCR)
theme_set(theme_minimal())
knitr::opts_chunk$set(echo = TRUE)
# Packages
library(tidyverse)
library(kableExtra)
library(ggcorrplot)
library(reshape2)
library(bestNormalize)
library(caret)
library(MASS)
library(pROC)
library(stats)
library(ROCR)
theme_set(theme_minimal())
# short descriptions of variables as table from matrix
vardesc <- data.frame(matrix(c(
'INDEX',	'Identification variable',
'TARGET_FLAG',	'Was car in a crash? 1 = Yes, 0 = No',
'TARGET_AMT',	'Cost of car crash',
'AGE',	'Age of driver',
'BLUEBOOK',	'Value of vehicle',
'CAR_AGE',	'Vehicle age',
'CAR_TYPE',	'Type of car',
'CAR_USE', 'Main purpose the vehicle is used for',
'CLM_FREQ',	'Number of claims filed in past five years',
'EDUCATION',	'Maximum education level',
'HOMEKIDS',	'Number of children at home',
'HOME_VAL',	'Value of driver\'s home',
'INCOME',	'Annual income of the driver',
'JOB',	'Type of job by standard collar categories',
'KIDSDRIV',	'Number of children who drive',
'MSTATUS',	'Marital status',
'MVR_PTS',	'Motor vehicle inspection points',
'OLDCLAIM',	'Total claims payout in past five years',
'PARENT1',	'Single parent status',
'RED_CAR',	'1 if car is red, 0 if not',
'REVOKED',	'License revoked in past 7 years status',
'SEX',	'Driver gender',
'TIF',	'Time in force',
'TRAVETIME',	'Distance to work in minutes',
'URBANICITY',	'Category of how urban the area the driver lives is',
'YOJ', 'Number of years on the job'
),  byrow = TRUE, ncol = 2))
colnames(vardesc) <- c('Variable', 'Description')
kbl(vardesc, booktabs = T, caption = "Variable Descriptions") %>%
kable_styling(latex_options = c("striped", "HOLD_position"), full_width = F)
tdata <- read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/621/HW4/insurance_training_data.csv")
edata <- read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/621/HW4/insurance-evaluation-data.csv")
initialobs <- tdata[1:4,]
kbl(t(initialobs), booktabs = T, caption = "Initial Observations") %>%
kable_styling(latex_options = c("striped", "HOLD_position"), full_width = F) %>%
add_header_above(c(" ", " ", "Row Number", " ", " ")) %>%
footnote(c("Includes the first four observations of all variables in the data"))
# theoretical effects
vareffects <- data.frame(matrix(c(
'INDEX',	'None',
'TARGET_FLAG',	'None',
'TARGET_AMT',	'None',
'AGE',	'Youngest and Oldest may have higher risk of accident',
'BLUEBOOK',	'Unknown on probability of collision but correlated with payout',
'CAR_AGE',	'Unknown on probability of collision but correlated with payout',
'CAR_TYPE',	'Unknown on probability of collision but correlated with payout',
'CAR_USE', 'Commerical vehicles might increase risk of accident',
'CLM_FREQ',	'Higher claim frequency increases likelihood of future claims',
'EDUCATION',	'Theoretically higher education levels lower risk',
'HOMEKIDS',	'Unknown',
'HOME_VAL',	'Theoretically home owners reduce risk due to more responsible driving',
'INCOME',	'Theoretically wealthier drivers have fewer accidents',
'JOB',	'Theoretically white collar+ jobs are safer',
'KIDSDRIV',	'Increased risk of accident from inexperienced driver',
'MSTATUS',	'Theoretically married people drive safer',
'MVR_PTS',	'Increased risk of accident',
'OLDCLAIM',	'Increased risk of higher payout with previous payout',
'PARENT1',	'Unknown',
'RED_CAR',	'Theoretically increased risk of accident based on urban legend',
'REVOKED',	'Increased risk of accident if revoked',
'SEX',	'Theoretically increased risk of accident for women based on urban legend',
'TIF',	'Decreased risk for those who have greater loyalty',
'TRAVETIME',	'Longer distances increase risk of accident',
'URBANICITY',	'The more urban the area the greater the risk of accident',
'YOJ', 'Decreased risk for those with greater longevity'
),  byrow = TRUE, ncol = 2))
colnames(vareffects) <- c('Variable', 'Effect')
kbl(vareffects, booktabs = T, caption = "Theoretical Variable Effects") %>%
kable_styling(latex_options = c("striped", "HOLD_position"), full_width = F)
tdata.nas <- lapply(tdata, function(x) sum(is.na(x)))
tdata.len <- lapply(tdata, function(x) length(x))
tdata.permis <- lapply(tdata, function(x) round(sum(is.na(x))/length(x)*100, 1))
tdata.types <- lapply(tdata, function(x) class(x))
tdata.firstob <- lapply(tdata, function(x) head(x, 1))
tdata.uniques <- lapply(tdata, function(x) length(unique(factor(x))))
tdata.tbl.natypes <- cbind(tdata.nas, tdata.len, tdata.permis, tdata.types, tdata.firstob, tdata.uniques)
colnames(tdata.tbl.natypes) <- c("Missing", "Total", "%", "Data Type", "Example", "Factors")
kbl(tdata.tbl.natypes, booktabs = T, caption = "Data Characteristics") %>%
kable_styling(latex_options = c("striped", "HOLD_position"), full_width = F)
tdata.summary.tbl <- summary(tdata)
kbl(t(tdata.summary.tbl), booktabs = T, caption = "Summary Characteristics") %>%
kable_styling(latex_options = c("striped", "scale_down", "hold_position"), full_width = F)
tdata %>%
select_if(is.numeric) %>%
gather %>%
ggplot() +
facet_wrap(~ key, scales = "free") +
geom_density(aes(value, color = value, fill = key, alpha = .5)) + theme(axis.title = element_blank(), legend.position = "none") + ggtitle("Numeric Variable Density") + theme(plot.title = element_text(hjust = 0.5))
tdata %>%
select_if(is.numeric) %>%
gather %>%
ggplot(aes(value, key)) +
facet_wrap(~ key, scales = "free") +
geom_violin(aes(color = key, alpha = 1)) +
geom_boxplot(aes(fill = key, alpha = .5), notch = TRUE, size = .1, lty = 3) +
stat_summary(fun.y = mean, geom = "point",
shape = 8, size = 1.5, color = "#000000") +
theme(axis.text = element_blank(),
axis.title = element_blank(),
legend.position = "none") +
ggtitle("Numeric Variable KDE & Distribution") +
theme(plot.title = element_text(hjust = 0.5))
tdata %>%
select_if(is.integer) %>%
gather() %>%
filter(value == 0 | 1) %>%
group_by(key) %>%
ggplot() +
facet_wrap(~ key, scales = "free") +
geom_bar(aes(value, color = value, fill = key, alpha = .5)) + theme(axis.title = element_blank(), legend.position = "none") + ggtitle("Integer Frequencies") + theme(plot.title = element_text(hjust = 0.5))
tdata %>%
dplyr::select(TARGET_FLAG, MVR_PTS, CLM_FREQ, HOMEKIDS, KIDSDRIV, TIF) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_bar(aes(value, color = key, fill = key, alpha = .5)) + theme(axis.title = element_blank(), legend.position = "none") + ggtitle("Select Integer Frequencies") + theme(plot.title = element_text(hjust = 0.5))
tdata %>%
select_if(is.numeric) %>%
cor() %>%
ggcorrplot(method = "circle", type="upper",
ggtheme = ggplot2::theme_minimal, legend.title = "Influence") + coord_flip()
# Select character variables
chars <- tdata %>%
dplyr::select_if(is.character)
# Use function to extract dollars
to_num <- function(x){
x <- as.character(x)
x <- gsub(",", "", x)
x <- gsub("\\$", "", x)
as.numeric(x)
}
# Specify those dollar variables
income.values <- to_num(chars$INCOME)
home.values <- to_num(chars$HOME_VAL)
bluebook.values <- to_num(chars$BLUEBOOK)
oldclaim.values <- to_num(chars$OLDCLAIM)
concept_df <- as.data.frame(cbind(income.values,
home.values,
bluebook.values,
oldclaim.values))
income.values.stat <- to_num(chars$INCOME)
home.values.stat <- to_num(chars$HOME_VAL)
bluebook.values.stat <- to_num(chars$BLUEBOOK)
oldclaim.values.stat <- to_num(chars$OLDCLAIM)
# impute median values for missing variables
income.values[is.na(income.values)] <-
median(income.values, na.rm = TRUE)
home.values[is.na(home.values)] <-
median(home.values, na.rm = TRUE)
bluebook.values[is.na(bluebook.values)] <-
median(bluebook.values, na.rm = TRUE)
oldclaim.values[is.na(oldclaim.values)] <-
median(oldclaim.values, na.rm = TRUE)
# Recombine into data frame
dollar.values <-
data.frame(cbind(income.values,
home.values,
bluebook.values,
oldclaim.values))
dollar.values.stats <-
data.frame(cbind(income.values.stat,
home.values.stat,
bluebook.values.stat,
oldclaim.values.stat))
# Join with training data
tdata <- data.frame(cbind(tdata, dollar.values))
# Check the difference
dollar.values.tbl <- summary(dollar.values)
dollar.values.stats.tbl <- summary(dollar.values.stats)
kbl(dollar.values.tbl, booktabs = T, caption = "Imputed Summary Statistics") %>%
kable_styling(latex_options = c("striped", "hold_position"), full_width = F)
kbl(dollar.values.stats.tbl, booktabs = T, caption = "Original Summary Statistics") %>%
kable_styling(latex_options = c("striped", "hold_position"), full_width = F)
# Covert categorical variables to factors
factors <- tdata %>%
dplyr::select("PARENT1",
"MSTATUS",
"SEX",
"EDUCATION",
"JOB",
"CAR_USE",
"CAR_TYPE",
"RED_CAR",
"REVOKED",
"URBANICITY")
factors <- data.frame(lapply(factors, function(x) as.factor(x)))
factors <- factors %>%
rename("parent1" = "PARENT1",
"mstatus" = "MSTATUS",
"sex" = "SEX",
"education" = "EDUCATION",
"job" = "JOB",
"car_use" = "CAR_USE",
"car_type" = "CAR_TYPE",
"red_car" = "RED_CAR",
"revoked" = "REVOKED",
"urbanicity" = "URBANICITY")
tdata <- cbind(tdata, factors)
# Exclude unrealistic values
tdata <- tdata %>%
mutate(car_age = ifelse(CAR_AGE<0, NA, CAR_AGE))
summary(tdata$car_age)
summary(tdata$CAR_AGE)
# More imputation
tdata$AGE[is.na(tdata$AGE)] <-
median(tdata$AGE, na.rm = T)
tdata$YOJ[is.na(tdata$YOJ)] <-
median(tdata$YOJ, na.rm = T)
tdata$car_age[is.na(tdata$car_age)] <-
median(tdata$car_age, na.rm = T)
sum(is.na(tdata))
tdata %>%
dplyr::select(is.factor) %>%
dplyr::select("car_type", "education", "job") %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, nrow = 3, scales = "free") +
geom_bar(aes(, fill = key )) + theme(axis.title = element_blank(), axis.text.x = element_blank(), legend.position = "none") + coord_flip() + ggtitle("Nonbinary Classifiers") + theme(plot.title = element_text(hjust = 0.5))
tdata %>%
dplyr::select(is.factor) %>%
dplyr::select("car_use",
"mstatus",
"parent1",
"red_car",
"revoked",
"sex",
"urbanicity") %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_bar(aes(, fill = key )) + theme(axis.title = element_blank(), axis.text.x = element_blank(), legend.position = "none") + coord_flip() + ggtitle("Binary Classifiers Counts") + theme(plot.title = element_text(hjust = 0.5))
tdata %>%
select_if(is.numeric) %>%
gather() %>%
ggplot(aes(key)) +
facet_wrap(~ key, scales = "free") +
geom_boxplot(aes(key, value, fill = key, alpha = .5)) + theme(axis.title = element_blank(), axis.text.x = element_blank(), legend.position = "none") + ggtitle("Numeric Distributions") + theme(plot.title = element_text(hjust = 0.5))
# Convert to factors
tdata$city <- as.factor(tdata$city)
# Convert to factors
tdata$city <- as.factor(tdata$city)
tdata[26:31] %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key, scales = "free") +
geom_bar(aes(fill = key, alpha = .5)) + theme(legend.position = "none", axis.title = element_blank()) + ggtitle("New Features") + theme(plot.title = element_text(hjust = 0.5))
# New features
tdata <- tdata %>%
mutate(city = ifelse(urbanicity == "Highly Urban/ Urban", 0, 1)) %>%
mutate(young = ifelse(AGE < 25, 1, 0)) %>%
mutate(clean_rec = ifelse(MVR_PTS == 0, 1, 0)) %>%
mutate(previous_accident = ifelse(CLM_FREQ == 0 & oldclaim.values == 0, 0, 1)) %>%
mutate(educated = ifelse(education %in% c("Bachelors", "Masters", "PhD"), 1, 0)) %>%
mutate(avg_claim = ifelse(CLM_FREQ > 0, oldclaim.values/CLM_FREQ, 0))
# Convert to factors
tdata$city <- as.factor(tdata$city)
tdata$young <- as.factor(tdata$young)
tdata$clean_rec <- as.factor(tdata$clean_rec)
tdata$previous_accident <- as.factor(tdata$previous_accident)
tdata$educated <- as.factor(tdata$educated)
tdata[26:31] %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key, scales = "free") +
geom_bar(aes(fill = key, alpha = .5)) + theme(legend.position = "none", axis.title = element_blank()) + ggtitle("New Features") + theme(plot.title = element_text(hjust = 0.5))
tdata %>%
select_if(is.numeric) %>%
gather() %>%
ggplot(aes(key)) +
facet_wrap(~ key, scales = "free") +
geom_boxplot(aes(key, value, fill = key, alpha = .5)) + theme(axis.title = element_blank(), axis.text.x = element_blank(), legend.position = "none") + ggtitle("Numeric Distributions") + theme(plot.title = element_text(hjust = 0.5))
# New features
tdata <- tdata %>%
mutate(city = ifelse(urbanicity == "Highly Urban/ Urban", 0, 1)) %>%
mutate(young = ifelse(AGE < 25, 1, 0)) %>%
mutate(clean_rec = ifelse(MVR_PTS == 0, 1, 0)) %>%
mutate(previous_accident = ifelse(CLM_FREQ == 0 & oldclaim.values == 0, 0, 1)) %>%
mutate(educated = ifelse(education %in% c("Bachelors", "Masters", "PhD"), 1, 0)) %>%
mutate(avg_claim = ifelse(CLM_FREQ > 0, oldclaim.values/CLM_FREQ, 0))
# Convert to factors
tdata$city <- as.factor(tdata$city)
tdata$young <- as.factor(tdata$young)
tdata$clean_rec <- as.factor(tdata$clean_rec)
tdata$previous_accident <- as.factor(tdata$previous_accident)
tdata$educated <- as.factor(tdata$educated)
tdata[26:31] %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key, scales = "free") +
geom_bar(aes(fill = key, alpha = .5)) + theme(legend.position = "none", axis.title = element_blank()) + ggtitle("New Features") + theme(plot.title = element_text(hjust = 0.5))
# Produce recommended transformations
bestNorms <- tdata[1:11,1:16]
df <- tdata %>%
select_if(is.numeric)
for (i in colnames(df)) {
bestNorms[[i]] <- bestNormalize(df[[i]],
allow_orderNorm = FALSE,
out_of_sample =FALSE)
}
# Continue focusing on realistic values
accident_costs <- tdata$TARGET_AMT[tdata$TARGET_AMT>.0]
# Focus on selected variables
bestNorms$target_amt$chosen_transform
tdata$target_amt <- scale(log(tdata$TARGET_AMT + 1))
tdata %>%
dplyr::select(where(is.numeric)) %>%
gather %>%
ggplot() +
facet_wrap(~ key, scales = "free") +
geom_density(aes(value, color = value, fill = key, alpha = .5)) + theme(axis.title = element_blank(), legend.position = "none") + ggtitle("Numeric Variable Density") + theme(plot.title = element_text(hjust = 0.5))
tdata %>%
dplyr::select(where(is.numeric)) %>%
dplyr::select("TARGET_AMT","target_amt") %>%
gather %>%
ggplot() +
facet_wrap(~ key, scales = "free") +
geom_density(aes(value, color = value, fill = key, alpha = .5)) + theme(axis.title = element_blank(), legend.position = "none") + ggtitle("Numeric Variable Density") + theme(plot.title = element_text(hjust = 0.5))
model1 <- glm(TARGET_FLAG ~ previous_accident,
family = binomial(link = "logit"), train)
# Split 70-30 training test
set.seed(1102)
tindex <- createDataPartition(tdata$TARGET_FLAG, p = .7, list = FALSE, times = 1)
train <- tdata[tindex,]
test <- tdata[-tindex,]
rindex <- tdata %>%
filter(TARGET_FLAG == 1)
reg.tindex <- createDataPartition(rindex$TARGET_AMT, p = .7, list = FALSE, times = 1)
reg.train <- rindex[reg.tindex,]
reg.test <- rindex[-reg.tindex,]
model1 <- glm(TARGET_FLAG ~ previous_accident,
family = binomial(link = "logit"), train)
summary(model1)
model2 <- glm(TARGET_FLAG ~ previous_accident +
city + young + clean_rec +
educated, family = binomial(link = "logit"), train)
summary(model2)
model3 <- glm(TARGET_FLAG ~ previous_accident +
city + mstatus + income.values +
sex + car_use + educated + KIDSDRIV +
revoked, family = binomial(link = "logit"),
train)
summary(model3)
model4 <- lm(target_amt ~ ., train)
model5 <- lm(target_amt ~ income.values +
home.values + bluebook.values +
oldclaim.values + avg_claim,
train)
summary(model5)
