y = "Mean Difference ($)",
title = "Differences in Average Earnings by State",
subtitle = "Includes all sexes and education levels") + geom_col()
ggplot(hilo_obs, aes(State, Obs_diff, fill = Gap)) +
labs(x = "State",
y = "Mean Difference ($)",
title = "Differences in Average Earnings by State",
subtitle = "Includes all sexes and education levels") + coord_flip() + geom_col()
ggplot(hilo_obs, aes(State, Obs_diff, fill = Gap)) +
labs(x = "State",
y = "Mean Difference ($)",
title = "Differences in Average Earnings by State",
subtitle = "Includes all sexes and education levels") + coord_flip() + geom_col() + theme_classic()
ggplot(hilo_obs, aes(x = (reorder(State, Obs_diff)) Obs_diff, fill = Gap)) +
ggplot(hilo_obs, aes(x = (reorder(State, Obs_diff), State), y= Obs_diff, fill = Gap)) +
ggplot(hilo_obs, aes(x = (reorder(State, Obs_diff) State), y= Obs_diff, fill = Gap)) +
ggplot(hilo_obs, aes(x = (reorder(State, Obs_diff), State), y= Obs_diff, fill = Gap)) +
ggplot(hilo_obs, aes(x = reorder(State, Obs_diff), State), y= Obs_diff, fill = Gap) +
labs(x = "State",
y = "Mean Difference ($)",
title = "Differences in Average Earnings by State",
subtitle = "Includes all sexes and education levels") + coord_flip()+
geom_col() +
theme_classic()
ggplot(hilo_obs, aes(x = reorder(State, Obs_diff), State), y= Obs_diff) +
labs(x = "State",
y = "Mean Difference ($)",
title = "Differences in Average Earnings by State",
subtitle = "Includes all sexes and education levels") + coord_flip()+
geom_col(fill = Gap) +
theme_classic()
ggplot(hilo_obs, aes(x = reorder(State, Obs_diff), State), y= Obs_diff) +
labs(x = "State",
y = "Mean Difference ($)",
title = "Differences in Average Earnings by State",
subtitle = "Includes all sexes and education levels") + coord_flip()+
geom_col(aes(fill = Gap)) +
theme_classic()
ggplot(hilo_obs, aes(x = reorder(State, Obs_diff), State), y= reorder(State, Obs_diff), Obs_diff) +
labs(x = "State",
y = "Mean Difference ($)",
title = "Differences in Average Earnings by State",
subtitle = "Includes all sexes and education levels") + coord_flip()+
geom_col(aes(fill = Gap)) +
theme_classic()
ggplot(hilo_obs, aes(x = reorder(State, Obs_diff), State), y= reorder(Obs_diff, State), Obs_diff) +
labs(x = "State",
y = "Mean Difference ($)",
title = "Differences in Average Earnings by State",
subtitle = "Includes all sexes and education levels") + coord_flip()+
geom_col(aes(fill = Gap)) +
theme_classic()
ggplot(hilo_obs, aes(x = reorder(State, Obs_diff), State), y= reorder(Obs_diff, State), Obs_diff) +
labs(x = "State",
y = "Mean Difference ($)",
title = "Differences in Average Earnings by State",
subtitle = "Includes all sexes and education levels") + coord_flip()+
geom_col(aes(fill = Gap))
knitr::opts_chunk$set(echo = TRUE)
# Packages
require(reshape2)
require(tidyverse)
require(readr)
require(DT)
require(ggpubr)
require(rstatix)
require(scales)
rmarkdown::paged_table(earnings.summary)
knitr::opts_chunk$set(echo = TRUE)
# Packages
require(reshape2)
require(tidyverse)
require(readr)
require(DT)
require(ggpubr)
require(rstatix)
require(scales)
# Load Data
income_2018_bystate  <-  read_csv("https://raw.githubusercontent.com/palmorezm/msdsdata606/master/Project/ACSST5Y2018.S2001.csv")
# Select relevant income-specific variables by state
earnings <- income_2018_bystate[2:53,1:242] %>%
select(c(
# General Identifier
NAME, # State Name
# Population and overall earnings
S2001_C03_002E,	# Male median earnings 16+
S2001_C05_002E, # Female median earnings 16+
S2001_C03_013E, # Male full-time median earnings
S2001_C05_013E, # Female full-time median earnings
S2001_C03_015E, # Male median earnings 25+
S2001_C05_015E, # Female median earnings 25+
# Male earnings by education
S2001_C03_016E, # Less than high school diploma
S2001_C03_017E, # High school diploma
S2001_C03_018E, # Some college or associates degree
S2001_C03_019E, # Bachelors degree
S2001_C03_020E, # Masters Degree
# Female earnings by education
S2001_C05_016E, # Less than high school diploma
S2001_C05_017E, # High school diploma
S2001_C05_018E, # Some college or associates degree
S2001_C05_019E, # Bachelors degree
S2001_C05_020E # Masters Degree
)) %>%
rename(
State = NAME,
m16 = S2001_C03_002E,
f16 = S2001_C05_002E,
mft = S2001_C03_013E,
fft = S2001_C05_013E,
m25 = S2001_C03_015E,
f25 = S2001_C05_015E,
flt = S2001_C05_016E,
fhs = S2001_C05_017E,
fas = S2001_C05_018E,
fbs = S2001_C05_019E,
fms = S2001_C05_020E,
mlt = S2001_C03_016E,
mhs = S2001_C03_017E,
mas = S2001_C03_018E,
mbs = S2001_C03_019E,
mms = S2001_C03_020E
)
# Convert numeric data to useful types
earnings[,2:17] <- lapply(earnings[,2:17], as.numeric)
head(earnings, 3)
# Further data extraction
income_2018_bystate <- income_2018_bystate[2:52,] %>%
select(c(
# General Reference Variables
GEO_ID, # Unique Geographic Identifier of state
NAME, # State Name
S2001_C01_001E, # Total population 16+ MOE
S2001_C01_001M, # Total population 16+
# Mean Earnings for FULL-TIME Workers (age 16+)
S2001_C03_002E,
S2001_C03_002M, # Median Female Earnings
S2001_C05_002E,
S2001_C05_002M, # Median
# Male Variables
S2001_C03_016E,
S2001_C03_016M,
S2001_C03_017E,
S2001_C03_017M,
S2001_C03_018E,
S2001_C03_018M,
S2001_C03_019E,
S2001_C03_019M,
S2001_C03_020E,
S2001_C03_020M,
# Female Variables
S2001_C05_016E,
S2001_C05_016M,
S2001_C05_017E,
S2001_C05_017M,
S2001_C05_018E,
S2001_C05_018M,
S2001_C05_019E,
S2001_C05_019M,
S2001_C05_020E,
S2001_C05_020M
)) %>%
rename(
# Location Information
GEO_ID = GEO_ID,
State = NAME,
# General Statistics on Male and Female Earnings aged 16+
TotalPop = S2001_C01_001E,
TotalPop_moe = S2001_C01_001M,
M_Earnings = S2001_C03_002E, # Female
M_Earnings_moe =  S2001_C03_002M,
F_Earnings = S2001_C05_002E,
F_Earnings_moe =  S2001_C05_002M,
# Male Earnings by Level of Education (aged 25+)
M_LTHS = S2001_C03_016E,
M_HS = S2001_C03_017E,
M_AS = S2001_C03_018E,
M_BS = S2001_C03_019E,
M_MS = S2001_C03_020E,
# Male Margins of Error by Education
M_LTHS_moe = S2001_C03_016M,
M_HS_moe = S2001_C03_017M,
M_AS_moe = S2001_C03_018M,
M_BS_moe = S2001_C03_019M,
M_MS_moe = S2001_C03_020M,
# Female Earnings by Level of Education (aged 25+)
F_LTHS = S2001_C05_016E,
F_HS = S2001_C05_017E,
F_AS = S2001_C05_018E,
F_BS = S2001_C05_019E,
F_MS = S2001_C05_020E,
# Female Margins of Error by Education
F_LTHS_moe = S2001_C05_016M,
F_HS_moe = S2001_C05_017M,
F_AS_moe = S2001_C05_018M,
F_BS_moe = S2001_C05_019M,
F_MS_moe = S2001_C05_020M,
)
# Converting data types
income_2018_bystate[,3:28] <- lapply(income_2018_bystate[,3:28], as.numeric)
income_2018_bystate$GEO_ID <- as.factor(income_2018_bystate$GEO_ID)
income_2018_bystate<- as.data.frame(income_2018_bystate)
# Checking for missing values - there should be none
sum(is.na(income_2018_bystate))
# Creating subsets of the data to isolate variables of interest
# excluding geo_id and moe for summary purposes
pop_income_2018 <- income_2018_bystate[,c(2,3,5,7)]
male_income_2018 <- income_2018_bystate[, c(2,seq(9, 18, 2))]
female_income_2018 <- income_2018_bystate[, c(2,seq(19, 28, 2))]
# These male and female stats can also be recombined
mf_income_2018 <- cbind(female_income_2018, male_income_2018[2:6])
# Calculate observed differences for the entire study
pop_obs <- pop_income_2018 %>%
mutate(Obs_diff = M_Earnings - F_Earnings) %>%
mutate(Pmf = F_Earnings/M_Earnings)
# Create a table with the highs and lows of states
# Alternatively tail could be used:
# min(tail(sort(pop_obs$Obs_diff),5))
top5 <- pop_obs %>%
filter(Obs_diff >= min(head(sort(pop_obs$Obs_diff, decreasing=TRUE), 5)))
top5$Gap <- as.factor("Wide")
low5 <- pop_obs %>%
filter(Obs_diff <= max(head(sort(pop_obs$Obs_diff, decreasing=FALSE), 5)))
low5$Gap <- as.factor("Narrow")
hilo_obs <- rbind(top5,low5)
# Calculating the observed differences of sex
mf_obs <- mf_income_2018 %>%
mutate(obs_diff_lths = M_LTHS - F_LTHS) %>%
mutate(obs_diff_hs = M_HS - F_HS) %>%
mutate(obs_diff_as = M_AS - F_AS) %>%
mutate(obs_diff_bs = M_BS - F_BS) %>%
mutate(obs_diff_ms = M_MS - F_MS)
# Give each variable its own row in education
mf_stateobs <- melt(mf_obs)
mf_stateobs[4] <- as.numeric(seq(1:51))
mf_stateobs  <- mf_stateobs %>%
rename(Category = variable,
Observation = value,
ID = V4)
mf_state_obsdiffs <- melt(mf_obs[,12:16])
mf_state_obsdiffs <- mf_state_obsdiffs %>%
rename(Observation = variable,
Difference = value)
mf_earnings_byedu <- melt(mf_obs[,2:11])
# summarizing the education earning using means
mf_earnings_byedu <- mf_earnings_byedu %>%
group_by(variable) %>%
summarise(AvgEarning = mean(value)) %>%
rename(Education = variable)
# Add in the variable of sex for later comparisons
mf_earnings_byedu$Sex <- c("Female","Female","Female","Female","Female","Male","Male","Male","Male","Male")
# Rename the education observations to be descriptive of
# the entire data set and remove the male/female bounds of edu
mf_earnings_byedu$Education <-
c("LTHS","HS","AS","BS","MS","LTHS","HS","AS","BS","MS")
# Variables chosen to describe the data are not mutually exclusive
# For example 'BS' is not just for Bachelors of Science.
# That category includes all those individuals that
# attained a bachelors degree on the ACS in 2018
# and as another example 'AS' contains those with 'some college'
# from the ACS in 2018. These variables were only used for ease
# in describing the variables visually
head(income_2018_bystate,10)
# Here we review the data as a whole for ACS. Since all states have
# larger incomes for males we can find the proportion of a females
# income to that of a males across the states. The mean dollar amounts
# are listed in the "Obs_diff" column.
head(pop_obs[,c(1,5,6)], 5)
head(earnings, 3)
pfm.ft <- earnings %>%
summarise(Pfm_ft = mean(fft)/mean(mft))
pfm.ft <- round(pfm.ft, digits = 4)
pfm.ft
earnings <- earnings %>%
mutate(dif.ft = mft - fft) %>%
mutate(dif.16 = m16 - f16) %>%
mutate(dif.25 = m25 - f25) %>%
mutate(Pft = fft/mft) %>%
mutate(P16 = f16/m16) %>%
mutate(P25 = f25/m25)
max.pft <- summary(earnings$Pft)[6]
earnings <- earnings %>%
mutate(dif.ft = mft - fft) %>%
mutate(dif.16 = m16 - f16) %>%
mutate(dif.25 = m25 - f25) %>%
mutate(Pft = fft/mft) %>%
mutate(P16 = f16/m16) %>%
mutate(P25 = f25/m25)
max.pft <- summary(earnings$Pft)[6]
earnings[which.max(earnings$Pft),]
earnings <- earnings[1:51,]
earnings.summary <- summary(earnings[2:7])
education.summary <- summary(earnings[8:17])
earnings.summary
rmarkdown::paged_table(earnings.summary)
# Here we review the data as a whole for ACS. Since all states have
# larger incomes for males we can find the proportion of a females
# income to that of a males across the states. The mean dollar amounts
# are listed in the "Obs_diff" column.
rmarkdown::paged_table(head(pop_obs[,c(1,5,6)], 5))
earnings.summary
rmarkdown::paged_table(earnings[,c(1,18:23)])
require(kable)
install.packages("kable")
require(kable)
require(kable)
install.packages("kableExtra")
require(kableExtra)
pfm.ft <- earnings %>%
summarise(Pfm_ft = mean(fft)/mean(mft))
pfm.ft <- round(pfm.ft, digits = 4)
pfm.ft
mf_earnings_byedu %>%
group_by(Education) %>%
mutate(Mean_Earnings = mean(AvgEarning)) %>%
filter(Sex == "Male") %>%
mutate(AvgEarn_wkdollars = Mean_Earnings / 48) %>%
ggplot( aes(x = reorder(Education, AvgEarn_wkdollars), y = AvgEarn_wkdollars)) +
geom_col(aes(fill = Education)) +
labs(x = "Education",
y = "Weekly Earnings ($)",
title = "Average Income by Education in the U.S.",
subtitle = "Using the Mean of Indiviudal Earnings in 2018",
caption = "Data orginates from the ACS") +
theme_classic() +
coord_flip() +
theme(legend.position = "none",
plot.caption = element_text(hjust = 0.5),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
```{r}
mf_earnings_byedu %>%
group_by(Education) %>%
mutate(Mean_Earnings = mean(AvgEarning)) %>%
filter(Sex == "Male") %>%
mutate(AvgEarn_wkdollars = Mean_Earnings / 48) %>%
ggplot( aes(x = reorder(Education, AvgEarn_wkdollars), y = AvgEarn_wkdollars)) +
geom_col(aes(fill = Education)) +
labs(x = "Education",
y = "Weekly Earnings ($)",
title = "Average Income by Education in the U.S.",
subtitle = "Using the Mean of Indiviudal Earnings in 2018",
caption = "Data orginates from the ACS") +
theme_classic() +
coord_flip() +
theme(legend.position = "none",
plot.caption = element_text(hjust = 0.5),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
avgincomebyedu_col_earnswkly <- mf_earnings_byedu %>%
group_by(Education) %>%
mutate(Mean_Earnings = mean(AvgEarning)) %>%
filter(Sex == "Male") %>%
mutate(AvgEarn_wkdollars = Mean_Earnings / 48) %>%
ggplot( aes(x = reorder(Education, AvgEarn_wkdollars), y = AvgEarn_wkdollars)) +
geom_col(aes(fill = Education)) +
labs(x = "Education",
y = "Weekly Earnings ($)",
title = "Average Income by Education in the U.S.",
subtitle = "Using the Mean of Indiviudal Earnings in 2018",
caption = "Data orginates from the ACS") +
theme_classic() +
coord_flip() +
theme(legend.position = "none",
plot.caption = element_text(hjust = 0.5),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
avgincomebyedu_col_earnswkly
avgincomebyedu_col_earnsyrly
avgincomebyedu_col_earnsyrly <- mf_earnings_byedu %>%
group_by(Education) %>%
mutate(Mean_Earnings = mean(AvgEarning)) %>%
filter(Sex == "Male") %>%
ggplot( aes(x = reorder(Education, Mean_Earnings), y = Mean_Earnings)) +
geom_col(aes(fill = Education)) +
labs(x = "Education",
y = "Annual Earnings ($)",
title = "Average Income by Education in the U.S.",
subtitle = "Using the Mean of Indiviudal Earnings in 2018",
caption = "Data orginates from the ACS") +
theme_classic() +
coord_flip() +
theme(legend.position = "none",
plot.caption = element_text(hjust = 0.5),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
avgincomebyedu_col_earnsyrly
obsdif_earns_edu <- ggplot(mf_state_obsdiffs, aes(x = reorder(Observation,Difference), y = Difference)) + geom_boxplot(aes(fill = Observation)) +
ylim(0,45000) +
scale_fill_discrete(name = "Education", labels = c("<HS", "HS", "AS", "BS", "MS")) +
labs(x = "Education",
y = "Annual Earnings ($)",
title = "Observed Differences in Earnings",
subtitle = "Using the Median of Indiviudal Earnings in 2018",
caption = "Data orginates from the ACS") +
theme_classic() +
theme(axis.text.x = element_blank(),
plot.caption = element_text(hjust = 0.5),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
obsdif_earns_edu
obsdif_earns_edu
ggplot(mf_stateobs[1:510,], aes(ID - 1, Observation)) + geom_point(aes(color = Category)) +
geom_hline(yintercept = mfobs.mean$mean)+
labs(x = "State ID",
y = "Earnings ($)",
title = "Earnings by State",
subtitle = "Includes all sexes and education levels",
caption = "Data source: ACS survey") +
coord_flip() +
theme_classic() +
theme(plot.caption = element_text(hjust = 0.5),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
mfobs.mean <- mf_stateobs[1:510,] %>%
summarise(mean = mean(Observation))
mfobs.anova <- anova_test(mf_state_obsdiffs, Difference ~ Observation)
mfobs.anova
ggplot(mf_stateobs[1:510,], aes(ID - 1, Observation)) + geom_point(aes(color = Category)) +
geom_hline(yintercept = mfobs.mean$mean)+
labs(x = "State ID",
y = "Earnings ($)",
title = "Earnings by State",
subtitle = "Includes all sexes and education levels",
caption = "Data source: ACS survey") +
coord_flip() +
theme_classic() +
theme(plot.caption = element_text(hjust = 0.5),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
state_earnings_wedu <- ggplot(mf_stateobs[1:510,], aes(ID - 1, Observation)) + geom_point(aes(color = Category)) +
geom_hline(yintercept = mfobs.mean$mean)+
labs(x = "State ID",
y = "Earnings ($)",
title = "Earnings by State",
subtitle = "Includes all sexes and education levels",
caption = "Data source: ACS survey") +
coord_flip() +
theme_classic() +
theme(plot.caption = element_text(hjust = 0.5),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
state_earnings_wedu
state_earnings_wedu
ggplot(hilo_obs, aes(x = Gap, y = Obs_diff, fill = Gap)) +
labs(x = "Relative Gap Type",
y = "Mean Difference ($)",
title = "Differences in Average Earnings in US",
subtitle = "Includes all sexes and education levels") +
geom_boxplot() +
theme_classic() +
theme(plot.caption = element_text(hjust = 0.5),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
coord_flip()
stategap_dif_box <- ggplot(hilo_obs, aes(x = Gap, y = Obs_diff, fill = Gap)) +
labs(x = "Relative Gap Type",
y = "Mean Difference ($)",
title = "Differences in Average Earnings in US",
subtitle = "Includes all sexes and education levels") +
geom_boxplot() +
theme_classic() +
theme(plot.caption = element_text(hjust = 0.5),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
coord_flip()
stategap_dif_box
sel5states_gap
sel5states_gap <- ggplot(hilo_obs, aes(x = reorder(State, -Obs_diff), y = Obs_diff)) +
labs(x = "State",
y = "Mean Difference ($)",
title = "Differences in Average Earnings by State",
subtitle = "Includes all sexes and education levels") +
geom_col(aes(fill=Gap)) +
coord_flip() +
theme_classic() +
theme(plot.caption = element_text(hjust = 0.5),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
sel5states_gap
stategap_dif_box
mfobs.mean <- mf_stateobs[1:510,] %>%
summarise(mean = mean(Observation))
mfobs.anova <- anova_test(mf_state_obsdiffs, Difference ~ Observation)
mfobs.anova
mfobs.anova
ggplot(mf_stateobs[1:510,], aes(Observation, Category, color = ID)) +
geom_point() +
geom_vline(xintercept = mfobs.mean$mean) +
labs(x = "Earnings ($)",
y = "Category",
title = "Earnings by State",
subtitle = "Includes all sexes and education levels",
caption = "Data source: ACS survey") +
theme_classic() +
theme(plot.caption = element_text(hjust = 0.5),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
stateedu_earnings_clusters
stateedu_earnings_clusters <- ggplot(mf_stateobs[1:510,], aes(Observation, Category, color = ID)) +
geom_point() +
geom_vline(xintercept = mfobs.mean$mean) +
labs(x = "Earnings ($)",
y = "Category",
title = "Earnings by State",
subtitle = "Includes all sexes and education levels",
caption = "Data source: ACS survey") +
theme_classic() +
theme(plot.caption = element_text(hjust = 0.5),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
stateedu_earnings_clusters
