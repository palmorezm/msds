choices = unique(df$ICD.Chapter),
selected = "Neoplasms",
multiple = F
),
plotlyOutput(outputId = "p", height = "800px", width = "1000px")
)
server <- function(input, output, ...) {
output$p <- renderPlotly({
df %>%
filter(ICD.Chapter == input$Cause) %>%
group_by(State) %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~State,
name = "Crude Rate Chart")
})
}
shinyApp(ui, server)
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~State,
name = "Crude Rate Chart")
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
name = "Crude Rate Chart")
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
name = "Crude Rate Chart",
hover_data=['Crude_Rate', 'Population'],
color='Population',
labels={'Crude_Rate':'population of Canada'})
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
name = "Crude Rate Chart",
hover_data=['Crude_Rate', 'Population'],
color='Population',
labels={'Crude_Rate':'Crude Mortality Rate'}, height = 400)
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
name = "Crude Rate Chart",
text = Crude_Rate)
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
name = "Crude Rate Chart",
text = df$Crude_Rate)
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
name = "Crude Rate Chart")
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
name = "Crude Rate Chart",
color = ~Crude_Mortality)
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
color = ~Crude_Mortality
)
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
color = ~Population
)
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate)
)
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = y, textposition = 'auto'
)
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = Crude_Rate, textposition = 'auto'
)
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~Crude_Rate,
textposition = 'auto'
)
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round(Crude_Rate, 0),
textposition = 'auto'
)
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round(Crude_Rate, 0),
textposition = 'auto',
color = ~Population
)
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round(c(Crude_Rate, Population), 0),
textposition = 'auto',
)
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round((Crude_Rate, Population), 0),
textposition = 'auto',
)
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round(Crude_Rate, 0),
textposition = 'auto'
)
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round(Crude_Rate, 0),
textposition = 'auto'
) %>% layout(title = "January 2013 Sales Report",
xaxis = list(title = ""),
yaxis = list(title = ""))
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round(Crude_Rate, 0),
textposition = 'auto',
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = "Crude Mortality Rate by State",
xaxis = list(title = "Crude Rate (Per 100,000)"),
yaxis = list(title = "State"))
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round(Crude_Rate, 0),
textposition = 'auto',
marker = list(color = 'rgb(150, 250, 242)',
line = list(color = 'rgb(8,48,107)', width = 1.25))) %>%
layout(title = "Crude Mortality Rate by State",
xaxis = list(title = "Crude Rate (Per 100,000)"),
yaxis = list(title = "State"))
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round(Crude_Rate, 0),
textposition = 'auto',
marker = list(color = 'rgb(150, 217, 250)',
line = list(color = 'rgb(8,48,107)', width = 1.25))) %>%
layout(title = "Crude Mortality Rate by State",
xaxis = list(title = "Crude Rate (Per 100,000)"),
yaxis = list(title = "State"))
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round(Crude_Rate, 0),
textposition = 'auto',
marker = list(color = 'rgb(150, 217, 250)',
line = list(color = 'rgb(2,38,100)', width = 1.25))) %>%
layout(title = "Crude Mortality Rate by State",
xaxis = list(title = "Crude Rate (Per 100,000)"),
yaxis = list(title = "State"))
ui <- fluidPage(
selectizeInput(
inputId = "Cause",
label = "Select Cause of Death",
choices = unique(df$ICD.Chapter),
selected = "Neoplasms",
multiple = F
),
plotlyOutput(outputId = "p", height = "800px", width = "1000px")
)
server <- function(input, output, ...) {
output$p <- renderPlotly({
df %>%
filter(ICD.Chapter == "Neoplasms") %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round(Crude_Rate, 0),
textposition = 'auto',
marker = list(color = 'rgb(150, 217, 250)',
line = list(color = 'rgb(2,38,100)', width = 1.25))) %>%
layout(title = "Crude Mortality Rate by State",
xaxis = list(title = "Crude Rate (Per 100,000)"),
yaxis = list(title = "State"))
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectizeInput(
inputId = "Cause",
label = "Select Cause of Death",
choices = unique(df$ICD.Chapter),
selected = "Neoplasms",
multiple = F
),
plotlyOutput(outputId = "p", height = "800px", width = "1000px")
)
server <- function(input, output, ...) {
output$p <- renderPlotly({
df %>%
filter(ICD.Chapter == input$Cause) %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round(Crude_Rate, 0),
textposition = 'auto',
marker = list(color = 'rgb(150, 217, 250)',
line = list(color = 'rgb(2,38,100)', width = 1.25))) %>%
layout(title = "Crude Mortality Rate by State",
xaxis = list(title = "Crude Rate (Per 100,000)"),
yaxis = list(title = "State"))
})
}
shinyApp(ui, server)
df %>%
ui <- fluidPage(
selectizeInput(
inputId = "Cause",
label = "Select Cause of Death",
choices = unique(df$ICD.Chapter),
selected = "Pregnancy, childbirth and the puerperium",
multiple = F
),
plotlyOutput(outputId = "p", height = "800px", width = "1000px")
)
server <- function(input, output, ...) {
output$p <- renderPlotly({
df %>%
filter(ICD.Chapter == input$Cause) %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round(Crude_Rate, 1),
textposition = 'auto',
marker = list(color = 'rgb(150, 217, 250)',
line = list(color = 'rgb(2,38,100)', width = 1.25))) %>%
layout(title = "Crude Mortality Rate by State",
xaxis = list(title = "Crude Rate (Per 100,000)"),
yaxis = list(title = "State"))
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectizeInput(
inputId = "Cause",
label = "Select Cause of Death",
choices = unique(df$ICD.Chapter),
selected = "Pregnancy, childbirth and the puerperium",
multiple = F
),
plotlyOutput(outputId = "p", height = "800px", width = "1000px")
)
server <- function(input, output, ...) {
output$p <- renderPlotly({
df %>%
filter(ICD.Chapter == input$Cause) %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round(Crude_Rate, 1),
textposition = 'auto',
marker = list(color = 'rgb(150, 217, 250)',
line = list(color = 'rgb(2,38,100)', width = 1.25))) %>%
layout(title = "Crude Mortality Rate by State",
xaxis = list(title = "Crude Rate (Per 100,000)"),
yaxis = list(title = "State"))
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectizeInput(
inputId = "Cause",
label = "Select Cause of Death",
choices = unique(df$ICD.Chapter),
selected = "Pregnancy, childbirth and the puerperium",
multiple = F
),
plotlyOutput(outputId = "p", height = "800px", width = "1000px"),
hr(),
helpText("Data Source: CDC")
)
server <- function(input, output, ...) {
output$p <- renderPlotly({
df %>%
filter(ICD.Chapter == input$Cause) %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round(Crude_Rate, 1),
textposition = 'auto',
marker = list(color = 'rgb(150, 217, 250)',
line = list(color = 'rgb(2,38,100)', width = 1.25))) %>%
layout(title = "Crude Mortality Rate by State",
xaxis = list(title = "Crude Rate (Per 100,000)"),
yaxis = list(title = "State"))
})
}
shinyApp(ui, server)
ui <- fluidPage(
h1("State Mortality Rankings - 2010")
selectizeInput(
inputId = "Cause",
label = "Select Cause of Death",
choices = unique(df$ICD.Chapter),
selected = "Pregnancy, childbirth and the puerperium",
multiple = F
),
plotlyOutput(outputId = "p", height = "800px", width = "1000px"),
hr(),
helpText("Data Source: CDC WONDER system, at
https://wonder.cdc.gov/ucd-icd10.htm")
)
server <- function(input, output, ...) {
output$p <- renderPlotly({
df %>%
filter(ICD.Chapter == input$Cause) %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round(Crude_Rate, 1),
textposition = 'auto',
marker = list(color = 'rgb(150, 217, 250)',
line = list(color = 'rgb(2,38,100)', width = 1.25))) %>%
layout(title = "Crude Mortality Rate by State",
xaxis = list(title = "Crude Rate (Per 100,000)"),
yaxis = list(title = "State"))
})
}
shinyApp(ui, server)
ui <- fluidPage(
h1("State Mortality Rankings - 2010"),
selectizeInput(
inputId = "Cause",
label = "Select Cause of Death",
choices = unique(df$ICD.Chapter),
selected = "Pregnancy, childbirth and the puerperium",
multiple = F
),
plotlyOutput(outputId = "p", height = "800px", width = "1000px"),
hr(),
helpText("Data Source: CDC WONDER system, at
https://wonder.cdc.gov/ucd-icd10.htm")
)
server <- function(input, output, ...) {
output$p <- renderPlotly({
df %>%
filter(ICD.Chapter == input$Cause) %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round(Crude_Rate, 1),
textposition = 'auto',
marker = list(color = 'rgb(150, 217, 250)',
line = list(color = 'rgb(2,38,100)', width = 1.25))) %>%
layout(title = "Crude Mortality Rate by State",
xaxis = list(title = "Crude Rate (Per 100,000)"),
yaxis = list(title = "State"))
})
}
shinyApp(ui, server)
ui <- fluidPage(
h2("2010 State Mortality Rankings"),
selectizeInput(
inputId = "Cause",
label = "Select Cause of Death",
choices = unique(df$ICD.Chapter),
selected = "Pregnancy, childbirth and the puerperium",
multiple = F
),
plotlyOutput(outputId = "p", height = "800px", width = "1000px"),
hr(),
helpText("Data Source: CDC WONDER system, at
https://wonder.cdc.gov/ucd-icd10.htm")
)
server <- function(input, output, ...) {
output$p <- renderPlotly({
df %>%
filter(ICD.Chapter == input$Cause) %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round(Crude_Rate, 1),
textposition = 'auto',
marker = list(color = 'rgb(150, 217, 250)',
line = list(color = 'rgb(2,38,100)', width = 1.25))) %>%
layout(title = "Crude Mortality Rate by State",
xaxis = list(title = "Crude Rate (Per 100,000)"),
yaxis = list(title = "State"))
})
}
shinyApp(ui, server)
ui <- fluidPage(
h3("2010 State Mortality Rankings"),
selectizeInput(
inputId = "Cause",
label = "Select Cause of Death",
choices = unique(df$ICD.Chapter),
selected = "Pregnancy, childbirth and the puerperium",
multiple = F
),
plotlyOutput(outputId = "p", height = "800px", width = "1000px"),
hr(),
helpText("Data Source: CDC WONDER system, at
https://wonder.cdc.gov/ucd-icd10.htm")
)
server <- function(input, output, ...) {
output$p <- renderPlotly({
df %>%
filter(ICD.Chapter == input$Cause) %>%
arrange(desc(Crude_Rate)) %>%
plot_ly(.,
x = ~Crude_Rate,
y = ~reorder(State, Crude_Rate),
text = ~round(Crude_Rate, 1),
textposition = 'auto',
marker = list(color = 'rgb(150, 217, 250)',
line = list(color = 'rgb(2,38,100)', width = 1.25))) %>%
layout(title = "Crude Mortality Rate by State",
xaxis = list(title = "Crude Rate (Per 100,000)"),
yaxis = list(title = "State"))
})
}
shinyApp(ui, server)
