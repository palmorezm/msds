linetype = "dotted"),
panel.grid.minor.y = element_line(color = "lightgrey",
linetype = "dotted"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face = "bold", size = 12),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_blank()) +
scale_x_discrete(limits = rev(levels(inc$Var1)), expand = c(-0.8, -4))  +
scale_y_continuous(limits = c(0, 200), breaks = seq(0, 200, 50), expand = c(0.01, 0.5))
# Answer Question 3 here
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
mutate(RevPerEmp = Revenue / Employees) %>%
group_by(Industry) %>%
summarise(TotRevPerEmp = (sum(RevPerEmp)/1000000)) %>%
ggplot(aes(reorder(Industry, TotRevPerEmp), TotRevPerEmp)) +
geom_col(aes(y = TotRevPerEmp,
fill = TotRevPerEmp, alpha = .80)) + coord_flip() +
labs(y = "Revenue Per Employee (Millions of Dollars)", x = "Industry",
title = "Total Revenue per Employee in US",
caption = "Contains data on fastest 5000 companies as compiled by Inc. magazine") +
theme(legend.position = "none",
panel.grid.minor.x = element_line(color = "lightgrey",
linetype = "dotted"),
panel.grid.minor.y = element_line(color = "lightgrey",
linetype = "dotted"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face = "bold", size = 12),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_blank()) +
scale_x_discrete(limits = rev(levels(inc$Var1)), expand = c(-0.8, -4))  +
scale_y_continuous(limits = c(0, 200), breaks = seq(0, 200, 50), expand = c(0.01, 0.5))
# Example 2: considers the total revenue per industry and total  first
# then sums the revenue per employee within each industry
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
group_by(Industry) %>%
mutate(TotalRev = sum(Revenue),
TotalEmp = sum(Employees)) %>%
summarise(TotRevPerEmp = TotalRev / TotalEmp)) %>%
# Example 2: considers the total revenue per industry and total  first
# then sums the revenue per employee within each industry
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
group_by(Industry) %>%
mutate(TotalRev = sum(Revenue),
TotalEmp = sum(Employees)) %>%
summarise(TotRevPerEmp = TotalRev / TotalEmp) %>%
ggplot(aes(reorder(Industry, TotRevPerEmp), TotRevPerEmp)) +
geom_col(aes(y = TotRevPerEmp,
fill = TotRevPerEmp, alpha = .80)) + coord_flip() +
labs(y = "Revenue Per Employee (Millions of Dollars)", x = "Industry",
title = "Total Revenue per Employee in US",
caption = "Contains data on fastest 5000 companies as compiled by Inc. magazine") +
theme(legend.position = "none",
panel.grid.minor.x = element_line(color = "lightgrey",
linetype = "dotted"),
panel.grid.minor.y = element_line(color = "lightgrey",
linetype = "dotted"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face = "bold", size = 12),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_blank()) +
scale_x_discrete(limits = rev(levels(inc$Var1)), expand = c(-0.8, -4))  +
scale_y_continuous(limits = c(0, 200), breaks = seq(0, 200, 50), expand = c(0.01, 0.5))
# Example 2: considers the total revenue per industry and total  first
# then sums the revenue per employee within each industry
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
group_by(Industry) %>%
mutate(TotalRev = sum(Revenue),
TotalEmp = sum(Employees)) %>%
summarise(TotRevPerEmp = TotalRev / TotalEmp) %>%
ggplot(aes(reorder(Industry, TotRevPerEmp), TotRevPerEmp)) +
geom_col(aes(y = TotRevPerEmp,
fill = TotRevPerEmp, alpha = .80)) + coord_flip() +
labs(y = "Revenue Per Employee (Millions of Dollars)", x = "Industry",
title = "Total Revenue per Employee in US",
caption = "Contains data on fastest 5000 companies as compiled by Inc. magazine") +
theme(legend.position = "none",
panel.grid.minor.x = element_line(color = "lightgrey",
linetype = "dotted"),
panel.grid.minor.y = element_line(color = "lightgrey",
linetype = "dotted"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face = "bold", size = 12),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_blank())
# Example 2: considers the total revenue per industry and total  first
# then sums the revenue per employee within each industry
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
group_by(Industry) %>%
mutate(TotalRev = sum(Revenue),
TotalEmp = sum(Employees)) %>%
summarise(TotRevPerEmp = TotalRev / TotalEmp)
TotalEmp = sum(Employees)
# Example 2: considers the total revenue per industry and total  first
# then sums the revenue per employee within each industry
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
group_by(Industry) %>%
summarise(TotalRev = sum(Revenue),
TotalEmp = sum(Employees) )
# Example 2: considers the total revenue per industry and total  first
# then sums the revenue per employee within each industry
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
group_by(Industry) %>%
summarise(TotalRev = sum(Revenue),
TotalEmp = sum(Employees),
TotRevPerEmp = TotalRev / TotalEmp)
# Example 2: considers the total revenue per industry and total  first
# then sums the revenue per employee within each industry
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
group_by(Industry) %>%
summarise(TotalRev = sum(Revenue),
TotalEmp = sum(Employees),
TotRevPerEmp = TotalRev / TotalEmp) %>%
ggplot(aes(reorder(Industry, TotRevPerEmp), TotRevPerEmp)) +
geom_col(aes(y = TotRevPerEmp,
fill = TotRevPerEmp, alpha = .80)) + coord_flip() +
labs(y = "Revenue Per Employee (Millions of Dollars)", x = "Industry",
title = "Total Revenue per Employee in US",
caption = "Contains data on fastest 5000 companies as compiled by Inc. magazine") +
theme(legend.position = "none",
panel.grid.minor.x = element_line(color = "lightgrey",
linetype = "dotted"),
panel.grid.minor.y = element_line(color = "lightgrey",
linetype = "dotted"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face = "bold", size = 12),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_blank())
# Example 2: considers the total revenue per industry and total  first
# then sums the revenue per employee within each industry
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
group_by(Industry) %>%
summarise(TotalRev = sum(Revenue),
TotalEmp = sum(Employees),
(TotRevPerEmp = TotalRev / TotalEmp)/1000) %>%
ggplot(aes(reorder(Industry, TotRevPerEmp), TotRevPerEmp)) +
geom_col(aes(y = TotRevPerEmp,
fill = TotRevPerEmp, alpha = .80)) + coord_flip() +
labs(y = "Revenue Per Employee (Millions of Dollars)", x = "Industry",
title = "Total Revenue per Employee in US",
caption = "Contains data on fastest 5000 companies as compiled by Inc. magazine") +
theme(legend.position = "none",
panel.grid.minor.x = element_line(color = "lightgrey",
linetype = "dotted"),
panel.grid.minor.y = element_line(color = "lightgrey",
linetype = "dotted"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face = "bold", size = 12),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_blank())
# Example 2: considers the total revenue per industry and total  first
# then sums the revenue per employee within each industry
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
group_by(Industry) %>%
summarise(TotalRev = sum(Revenue),
TotalEmp = sum(Employees),
(TotRevPerEmp = TotalRev / TotalEmp)1000) %>%
# Example 2: considers the total revenue per industry and total  first
# then sums the revenue per employee within each industry
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
group_by(Industry) %>%
summarise(TotalRev = sum(Revenue),
TotalEmp = sum(Employees),
(TotRevPerEmp = TotalRev / TotalEmp)/1000) %>%
ggplot(aes(reorder(Industry, TotRevPerEmp), TotRevPerEmp)) +
geom_col(aes(y = TotRevPerEmp,
fill = TotRevPerEmp, alpha = .80)) + coord_flip() +
labs(y = "Revenue Per Employee (Millions of Dollars)", x = "Industry",
title = "Total Revenue per Employee in US",
caption = "Contains data on fastest 5000 companies as compiled by Inc. magazine") +
theme(legend.position = "none",
panel.grid.minor.x = element_line(color = "lightgrey",
linetype = "dotted"),
panel.grid.minor.y = element_line(color = "lightgrey",
linetype = "dotted"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face = "bold", size = 12),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_blank())
# Example 2: considers the total revenue per industry and total  first
# then sums the revenue per employee within each industry
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
group_by(Industry) %>%
summarise(TotalRev = sum(Revenue),
TotalEmp = sum(Employees),
TotRevPerEmp = (TotalRev / TotalEmp)/1000) %>%
ggplot(aes(reorder(Industry, TotRevPerEmp), TotRevPerEmp)) +
geom_col(aes(y = TotRevPerEmp,
fill = TotRevPerEmp, alpha = .80)) + coord_flip() +
labs(y = "Revenue Per Employee (Millions of Dollars)", x = "Industry",
title = "Total Revenue per Employee in US",
caption = "Contains data on fastest 5000 companies as compiled by Inc. magazine") +
theme(legend.position = "none",
panel.grid.minor.x = element_line(color = "lightgrey",
linetype = "dotted"),
panel.grid.minor.y = element_line(color = "lightgrey",
linetype = "dotted"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face = "bold", size = 12),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_blank())
# Then without NY filter (for entire US)
# Example 1: considers the revenue per employee first
# then sums the revenue per employee within each industry
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
mutate(RevPerEmp = Revenue / Employees) %>%
group_by(Industry) %>%
summarise(TotRevPerEmp = (sum(RevPerEmp)/1000000)) %>%
ggplot(aes(reorder(Industry, TotRevPerEmp), TotRevPerEmp)) +
geom_col(aes(y = TotRevPerEmp,
fill = TotRevPerEmp, alpha = .80)) + coord_flip() +
labs(y = "Revenue Per Employee (Million)", x = "Industry",
title = "Total Revenue per Employee in US",
caption = "Contains data on fastest 5000 companies as compiled by Inc. magazine") +
theme(legend.position = "none",
panel.grid.minor.x = element_line(color = "lightgrey",
linetype = "dotted"),
panel.grid.minor.y = element_line(color = "lightgrey",
linetype = "dotted"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face = "bold", size = 12),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_blank())
# Example 2: considers the total revenue per industry and total  first
# then sums the revenue per employee within each industry
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
group_by(Industry) %>%
summarise(TotalRev = sum(Revenue),
TotalEmp = sum(Employees),
TotRevPerEmp = (TotalRev / TotalEmp)/1000) %>%
ggplot(aes(reorder(Industry, TotRevPerEmp), TotRevPerEmp)) +
geom_col(aes(y = TotRevPerEmp,
fill = TotRevPerEmp, alpha = .80)) + coord_flip() +
labs(y = "Revenue Per Employee (Thousand Dollars)", x = "Industry",
title = "Total Revenue per Employee in US",
caption = "Contains data on fastest 5000 companies as compiled by Inc. magazine") +
theme(legend.position = "none",
panel.grid.minor.x = element_line(color = "lightgrey",
linetype = "dotted"),
panel.grid.minor.y = element_line(color = "lightgrey",
linetype = "dotted"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face = "bold", size = 12),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_blank())
# Example 2: considers the total revenue per industry and total  first
# then sums the revenue per employee within each industry
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
group_by(Industry) %>%
summarise(TotalRev = sum(Revenue),
TotalEmp = sum(Employees),
TotRevPerEmp = (TotalRev / TotalEmp)/1000) %>%
ggplot(aes(reorder(Industry, TotRevPerEmp), TotRevPerEmp)) +
geom_col(aes(y = TotRevPerEmp,
fill = TotRevPerEmp, alpha = .80)) + coord_flip() +
labs(y = "Revenue Per Employee (Thousand Dollars)", x = "Industry",
title = "Total Revenue per Employee in US",
caption = "Contains data on fastest 5000 companies as compiled by Inc. magazine") +
theme(legend.position = "none",
panel.grid.minor.x = element_line(color = "lightgrey",
linetype = "dotted"),
panel.grid.minor.y = element_line(color = "lightgrey",
linetype = "dotted"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face = "bold", size = 12),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_blank())
# Then without NY filter (for entire US)
# Example 1: considers the revenue per employee first
# then sums the revenue per employee within each industry
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
mutate(RevPerEmp = Revenue / Employees) %>%
group_by(Industry) %>%
summarise(TotRevPerEmp = (sum(RevPerEmp)/1000000)) %>%
ggplot(aes(reorder(Industry, TotRevPerEmp), TotRevPerEmp)) +
geom_col(aes(y = TotRevPerEmp,
fill = TotRevPerEmp, alpha = .80)) + coord_flip() +
labs(y = "Revenue Per Employee (Million Dollars)", x = "Industry",
title = "Total Revenue per Employee in US",
caption = "Contains data on fastest 5000 companies as compiled by Inc. magazine") +
theme(legend.position = "none",
panel.grid.minor.x = element_line(color = "lightgrey",
linetype = "dotted"),
panel.grid.minor.y = element_line(color = "lightgrey",
linetype = "dotted"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face = "bold", size = 12),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_blank())
# Example 2: considers the total revenue per industry and total  first
# then sums the revenue per employee within each industry
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
group_by(Industry) %>%
summarise(TotalRev = sum(Revenue),
TotalEmp = sum(Employees),
TotRevPerEmp = (TotalRev / TotalEmp)/1000) %>%
ggplot(aes(reorder(Industry, TotRevPerEmp), TotRevPerEmp)) +
geom_col(aes(y = TotRevPerEmp,
fill = TotRevPerEmp, alpha = .80)) + coord_flip() +
labs(y = "Revenue Per Employee (Thousand Dollars)", x = "Industry",
title = "Total Revenue per Employee in US",
caption = "Contains data on fastest 5000 companies as compiled by Inc. magazine") +
theme(legend.position = "none",
panel.grid.minor.x = element_line(color = "lightgrey",
linetype = "dotted"),
panel.grid.minor.y = element_line(color = "lightgrey",
linetype = "dotted"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face = "bold", size = 12),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_blank())
# Testing Question 3 here
# There is more than one way to calculate "which industries generate the most revenue per employee"
# We take a look at NY out of curiosity for comparison
inc.ccs %>%
filter(State == "NY") %>%
dplyr::select(Industry, Revenue, Employees) %>%
mutate(RevPerEmp = Revenue / Employees) %>%
group_by(Industry) %>%
summarise(TotRevPerEmp = (sum(RevPerEmp)/1000000)) %>%
ggplot(aes(reorder(Industry, TotRevPerEmp), TotRevPerEmp)) +
geom_col(aes(y = TotRevPerEmp,
fill = TotRevPerEmp, alpha = .80)) + coord_flip() +
labs(y = "Revenue Per Employee (Millions of Dollars)", x = "Industry",
title = "Total Revenue per Employee in NY",
caption = "Contains data on fastest 5000 companies as compiled by Inc. magazine") +
theme(legend.position = "none",
panel.grid.minor.x = element_line(color = "lightgrey",
linetype = "dotted"),
panel.grid.minor.y = element_line(color = "lightgrey",
linetype = "dotted"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5))
# Then without NY filter (for entire US)
# Example 1: considers the revenue per employee first
# then sums the revenue per employee within each industry
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
mutate(RevPerEmp = Revenue / Employees) %>%
group_by(Industry) %>%
summarise(TotRevPerEmp = (sum(RevPerEmp)/1000000)) %>%
ggplot(aes(reorder(Industry, TotRevPerEmp), TotRevPerEmp)) +
geom_col(aes(y = TotRevPerEmp,
fill = TotRevPerEmp, alpha = .80)) + coord_flip() +
labs(y = "Revenue Per Employee (Million Dollars)", x = "Industry",
title = "Total Revenue per Employee in US",
caption = "Contains data on fastest 5000 companies as compiled by Inc. magazine") +
theme(legend.position = "none",
panel.grid.minor.x = element_line(color = "lightgrey",
linetype = "dotted"),
panel.grid.minor.y = element_line(color = "lightgrey",
linetype = "dotted"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face = "bold", size = 12),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_blank())
# Scaled features
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
mutate(RevPerEmp = Revenue / Employees) %>%
group_by(Industry) %>%
summarise(TotRevPerEmp = (sum(RevPerEmp)/1000000)) %>%
ggplot(aes(reorder(Industry, TotRevPerEmp), TotRevPerEmp)) +
geom_col(aes(y = TotRevPerEmp,
fill = TotRevPerEmp, alpha = .80)) + coord_flip() +
labs(y = "Revenue Per Employee (Million Dollars)", x = "Industry",
title = "Total Revenue per Employee in US",
caption = "Contains data on fastest 5000 companies as compiled by Inc. magazine") +
theme(legend.position = "none",
panel.grid.minor.x = element_line(color = "lightgrey",
linetype = "dotted"),
panel.grid.minor.y = element_line(color = "lightgrey",
linetype = "dotted"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face = "bold", size = 12),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_blank()) +
scale_x_discrete(limits = rev(levels(inc$Var1)), expand = c(-0.8, -4))  +
scale_y_continuous(limits = c(0, 200), breaks = seq(0, 200, 50), expand = c(0.01, 0.5))
# Example 2: considers the total revenue per industry and total employees in each
# then creates a proportion of revenue per employee
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
group_by(Industry) %>%
summarise(TotalRev = sum(Revenue),
TotalEmp = sum(Employees),
TotRevPerEmp = (TotalRev / TotalEmp)/1000) %>%
ggplot(aes(reorder(Industry, TotRevPerEmp), TotRevPerEmp)) +
geom_col(aes(y = TotRevPerEmp,
fill = TotRevPerEmp, alpha = .80)) + coord_flip() +
labs(y = "Revenue Per Employee (Thousand Dollars)", x = "Industry",
title = "Total Revenue per Employee in US",
caption = "Contains data on fastest 5000 companies as compiled by Inc. magazine") +
theme(legend.position = "none",
panel.grid.minor.x = element_line(color = "lightgrey",
linetype = "dotted"),
panel.grid.minor.y = element_line(color = "lightgrey",
linetype = "dotted"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face = "bold", size = 12),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_blank())
scale_x_discrete(limits = rev(levels(inc$Var1)), expand = c(-0.8, -4))
scale_y_continuous(limits = c(0, 200), breaks = seq(0, 200, 50), expand = c(0.01, 0.5))
# Answer Question 3 here
inc.ccs %>%
dplyr::select(Industry, Revenue, Employees) %>%
mutate(RevPerEmp = Revenue / Employees) %>%
group_by(Industry) %>%
summarise(TotRevPerEmp = (sum(RevPerEmp)/1000000)) %>%
ggplot(aes(reorder(Industry, TotRevPerEmp), TotRevPerEmp)) +
geom_col(aes(y = TotRevPerEmp,
fill = TotRevPerEmp, alpha = .80)) + coord_flip() +
labs(y = "Revenue Per Employee (Millions of Dollars)", x = "Industry",
title = "Total Revenue per Employee in US",
caption = "Contains data on fastest 5000 companies as compiled by Inc. magazine") +
theme(legend.position = "none",
panel.grid.minor.x = element_line(color = "lightgrey",
linetype = "dotted"),
panel.grid.minor.y = element_line(color = "lightgrey",
linetype = "dotted"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face = "bold", size = 12),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_blank()) +
scale_x_discrete(limits = rev(levels(inc$Var1)), expand = c(-0.8, -4))  +
scale_y_continuous(limits = c(0, 200), breaks = seq(0, 200, 50), expand = c(0.01, 0.5))
