BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(46)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(47)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(48)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(49)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(50)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(51)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(52)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(53)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(54)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(55)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(56)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(57)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(58)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(59)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(60)
set.seed(60)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(61)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(62)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(63)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(64)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(65)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
set.seed(44)
#Create Train and Test data sets
bound <- floor((nrow(df)/4)*3)      #define % of training and test set
df <- df[sample(nrow(df)), ]
train <- df[1:bound, ]
test <- df[(bound+1):nrow(df), ]
#Create the regression model
lmyield = lm(Yield~ManufacturingProcess32 +
ManufacturingProcess36 +
ManufacturingProcess09 +
ManufacturingProcess13 +
BiologicalMaterial02 +
BiologicalMaterial06 +
BiologicalMaterial03,
data=train)
summary(lmyield)
library(caret)
# Show predictions as data frame
data.frame(RMSE = caret::RMSE(lmyield_test), R2 caret::R2(lmyield_test, test$Yield))
# Show predictions as data frame
data.frame(RMSE = caret::RMSE(lmyield_test), R2 caret::R2(lmyield_test, test$Yield))
# Show predictions as data frame
data.frame(RMSE = caret::RMSE(lmyield_test, test$Yield), R2 caret::R2(lmyield_test, test$Yield))
# Show predictions as data frame
data.frame(RMSE = caret::RMSE(lmyield_test, test$Yield), R2 = caret::R2(lmyield_test, test$Yield))
# Show calculations as data frame with RMSE and R squared
df.res <- data.frame(RMSE = caret::RMSE(lmyield_test, test$Yield), R2 = caret::R2(lmyield_test, test$Yield))
df.res
flextable(df.res)
flextable(df.res) %>%
theme_vanilla() %>%
set_table_properties(layout = "autofit")
library(AppliedPredictiveModeling)
library(reshape2)
library(dplyr)
cormat <- round(cor(df),2)
melted_cormat = melt(cormat)
melted_cormat_df = data.frame(melted_cormat)
library(AppliedPredictiveModeling)
library(flextable)
library(dplyr)
#Load the data
data(ChemicalManufacturingProcess)
df = data.frame(ChemicalManufacturingProcess)
# Show initial observations
initial.obs <- as.data.frame(t(head(df)))
initial.obs <- initial.obs %>%
mutate(Variable = colnames(df)) %>%
dplyr::select(Variable, 1, 2, 3, 4, 5)
flextable(initial.obs) %>%
theme_vanilla() %>%
set_table_properties(layout = "autofit")
# Method using median of each feature
for(i in 1:ncol(df)){
df[is.na(df[,i]), i] <- median(df[,i], na.rm = TRUE)}
library(AppliedPredictiveModeling)
library(reshape2)
library(dplyr)
cormat <- round(cor(df),2)
melted_cormat = melt(cormat)
melted_cormat_df = data.frame(melted_cormat)
#Filter to only Yield and sort in descending order
yield_corr <- melted_cormat_df %>%
filter(Var2 == "Yield")
yield_corr$absvalue = abs(yield_corr$value)
yield_corr2 = yield_corr[order(-yield_corr[,4]),]
df %>%
select_at(vars(-one_of(nearZeroVar(., names = TRUE))))
yield_corr2
df.nearzero <- df %>%
select_at(vars (-one_of (nearZeroVar(. ,names = TRUE))))
df.nearzero == df
library(caret)
df.nearzero %>%
select(vars (-one_of(nearZeroVar(.,names=T))))
df.nearzero %>%
select_with(vars (-one_of(nearZeroVar(.,names=T))))
df.nearzero %>%
select_at(vars (-one_of(nearZeroVar(.,names=T))))
df.nz %>%
select_at(vars(-one_of(nearZeroVar(.,names=T))))
df.nz <- df %>%
select_at(vars(-one_of(nearZeroVar(.,names=T))))
cormat <- round(cor(df.nz),2)
melted_cormat = melt(cormat)
melted_cormat_df = data.frame(melted_cormat)
#Filter to only Yield and sort in descending order
yield_corr <- melted_cormat_df %>%
filter(Var2 == "Yield")
yield_corr$absvalue = abs(yield_corr$value)
yield_corr2 = yield_corr[order(-yield_corr[,4]),]
flextable(yield_corr2) %>%
theme_vanilla() %>%
set_table_properties(layout = "autofit")
View(df.nz)
df - df.nz
colnames(df)
colnames(df.nz)
colnames(df)
colnames(df)
colnames(df.nz)
library(Metrics)
library(caret)
#Predict with the test data
lmyield_test = predict(lmyield, newdata = test, interval ='prediction')
lmyield_test_df = data.frame(lmyield_test)
lmyield_test_df$actual = test$Yield
lmyield_test_rmse = rmse(lmyield_test_df$actual, lmyield_test_df$fit)
cat('RMSE of the test data for this model is', lmyield_test_rmse)
# Show calculations as data frame with RMSE and R squared
df.res <- data.frame(RMSE = caret::RMSE(lmyield_test, test$Yield), R2 = caret::R2(lmyield_test, test$Yield))
flextable(df.res) %>%
theme_vanilla() %>%
set_table_properties(layout = "autofit")
View(lmyield_test)
# Show calculations as data frame with RMSE and R squared
df.res <- data.frame(RMSE = lmyield_test_rmse, R2 = caret::R2(lmyield_test, test$Yield))
flextable(df.res) %>%
theme_vanilla() %>%
set_table_properties(layout = "autofit")
lmyield_train = predict(lmyield, newdata = train, interval ='prediction')
lmyield_train_df = data.frame(lmyield_train)
lmyield_train_df$actual = train$Yield
lmyield_train_rmse = rmse(lmyield_train_df$actual, lmyield_train_df$fit)
cat('RMSE of the test data for this model is', lmyield_train_rmse)
df.rtrain<- data.frame(RMSE = lmyield_train_rmse, R2 = caret::R2(lmyield_train, train$Yield))
df.rtrain
df.rtrain
cbind(df.rtrain, df.rtest)
# Show calculations as data frame with RMSE and R squared
df.rtest <- data.frame(RMSE = lmyield_test_rmse, R2 = caret::R2(lmyield_test, test$Yield))
cbind(df.rtrain, df.rtest)
rbind(df.rtrain, df.rtest)
df.res <- rbind(df.rtrain, df.rtest)
flextable(df.res) %>%
theme_vanilla() %>%
set_table_properties(layout = "autofit")
df.res %>%
mutate(Dataset = c("Train", "Test"))
df.res %>%
mutate(Dataset = c("Train", "Test")) %>%
dplyr::select(Dataset, RMSE, R2)
df.res %>%
mutate(Dataset = c("Train", "Test")) %>%
dplyr::select(Dataset, RMSE, R2.fit, R2.low, R2.upper)
flextable(df.res) %>%
theme_vanilla() %>%
set_table_properties(layout = "autofit")
df.res %>%
mutate(Dataset = c("Train", "Test")) %>%
dplyr::select(Dataset, RMSE, R2.fit, R2.lwr, R2.upr)
df.res <- df.res %>%
mutate(Dataset = c("Train", "Test")) %>%
dplyr::select(Dataset, RMSE, R2.fit, R2.lwr, R2.upr)
flextable(df.res) %>%
theme_vanilla() %>%
set_table_properties(layout = "autofit")
df.res$R2.fit
df.res$R2.fit[2]
(df.res$R2.fit[2],1)*100
round(df.res$R2.fit[2],1)*100
round(df.res$R2.fit[2],2)*100
library(caret)
varImp(lmyield)
varImp(lmyield)$importance
varImp(lmyield)
var.importance <- varImp(lmyield)
var.importance %>%
arrange()
library(dplyr)
var.importance %>%
arrange()
var.importance %>%
arrange(desc())
arrange(desc
var.importance
var.importance <- varImp(lmyield)
var.importance
library(caret)
library(dplyr)
var.importance <- varImp(lmyield)
var.importance
pls_importance <- varImp(lmyield)$importance %>%
as.data.frame() %>%
rownames_to_column("Variable") %>%
filter(Overall >= 50) %>%
arrange(desc(Overall)) %>%
mutate(importance = row_number())
