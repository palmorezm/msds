vitals <- read.csv("https://raw.githubusercontent.com/palmorezm/misc/master/Biometrics/Vitals1.csv")
head(vitals)
view(vitals)
View(vitals)
plot(vitals)
library(dplyr)
head(vitals)
vitals %>%
mutate(AVGBPS = sum(BPS1, BPS2, BPS3, na.rm = TRUE)/ 3)
vitals %>%
mutate(AVGBPS = rowsum(BPS1, BPS2, BPS3, na.rm = TRUE)/ 3)
vitals %>%
mutate(AVGBPS = rowSums(BPS1, BPS2, BPS3, na.rm = TRUE)/ 3)
vitals %>%
mutate(AVGBPS = rowSums(BPS1, BPS2, BPS3, na.rm = TRUE)/ 3)
vitals %>%
mutate(AVGBPS = (BPS1, BPS2, BPS3, na.rm = TRUE)/ 3)
vitals %>%
mutate(AVGBPS = (BPS1, BPS2, BPS3, na.rm = TRUE)/ 3)
vitals %>%
mutate(AVGBPS = (BPS1, BPS2, BPS3, na.rm = TRUE)/ 3)
vitals %>%
mutate(AVGBPS = (BPS1 + BPS2 + BPS3)/ 3)
head(vitals)
vitals %>%
mutate(AVGBPS = (BPS1 + BPS2 + BPS3)/ 3,
AVGBPD = (BPD1 + BPD2 + BPD3)/ 3,
AVGHR = (HR1 + HR2 + HR3) / 3)
df <- vitals %>%
mutate(AVGBPS = (BPS1 + BPS2 + BPS3)/ 3,
AVGBPD = (BPD1 + BPD2 + BPD3)/ 3,
AVGHR = (HR1 + HR2 + HR3) / 3)
df
df <- vitals %>%
mutate(AVGBPS = (BPS1 + BPS2 + BPS3)/ 3,
AVGBPD = (BPD1 + BPD2 + BPD3)/ 3,
AVGHR = (HR1 + HR2 + HR3) / 3)  %<%
dplyr::select(Date,
Weight,
AVGBPS,
AVGBPD,
AVGHR)
df <- vitals %>%
mutate(AVGBPS = (BPS1 + BPS2 + BPS3)/ 3,
AVGBPD = (BPD1 + BPD2 + BPD3)/ 3,
AVGHR = (HR1 + HR2 + HR3) / 3)  %>%
dplyr::select(Date,
Weight,
AVGBPS,
AVGBPD,
AVGHR)
df
plot(df)
df.mod <- lm(Weight ~., df)
summary(df.mod)
df.mod <- lm(Weight~., df)
summary(df.mod)
df.mod <- lm(Date~., df)
df.mod <- lm(AVGHR~., df)
summary(df.mod)
df.mod <- lm(Weight~AVGBPS, df)
summary(df)
summary(df.mod)
df.mod <- lm(Weight~AVGBPS + AVGBPD, df)
summary(df.mod)
df.mod <- lm(Weight~AVGBPS + AVGBPD + AVGHR, df)
summary(df.mod)
summary(df)
plot(df)
summary(df)
library(forecast)
####### Q&A #######
# Use the help function to explore what the series gold, woolyrnq and gas represent.
help(gold, package = forecast)
tsdisplay(gold)
# A: Daily morning gold prices in US dollars. 1 January 1985 - 31 March 1989.
help(woolyrnq, package = forecast)
tsdisplay(woolyrnq)
# A: Quarterly production of woollen yarn in Australia: tonnes. Mar 1965 - Sep 1994.
help(gas, package = forecast)
tsdisplay(gas)
# A: Australian monthly gas production: 1956-1995.
# a) Use autoplot() to plot each of these in separate plots.
autoplot(gold)
autoplot(woolyrnq)
autoplot(gas)
autoplot(woolyrnq)
autoplot(gold)
library(forecast)
frequency(gold)
frequency(woolyrnq)
frequency(gas)
help(gas, package = forecast)
tsdisplay(gas)
help(gas, package = forecast)
?frequency
autoplot(gold)
autoplot(woolyrnq)
autoplot(gas)
help(gold, package = forecast)
tute1 <- read.csv("https://raw.githubusercontent.com/palmorezm/msds/main/624/tute1.csv")
mytimeseries <- ts(tute1[,-1], start=1981, frequency=4)
autoplot(mytimeseries, facets=TRUE)
autoplot(mytimeseries, facets=TRUE)
# A: With facets=FALSE.
autoplot(mytimeseries, facets=FALSE)
myts <- ts(tute1[,-1], start=1981, frequency=4)
autoplot(myts, facets=TRUE)
# A: With facets=FALSE.
autoplot(myts, facets=FALSE)
library(forecast)
library(fma)
library(tidyverse)
library(seasonal)
autoplot(plastics)
plastics %>%
decompose(type='multiplicative') %>%
autoplot()
seasonplot(plastics,
ylab="Sales (Thousands)",
xlab="Month",
year.labels.left=TRUE,
main="Plastics Seasonal Plot",
col = 1:5)
seasons <- plastics %>%
decompose(type='multiplicative')
autoplot(plastics, series='Data') +
autolayer(seasadj(seasons), series='Seasonally Adjusted')
plastics[2] <- plastics[2] + 500
dec3 <- plastics %>%
decompose(type='multiplicative')
autoplot(dec3, series='Data') +
autolayer(seasadj(dec3), series='Adj. Outlier 2')
plastics[42] <- plastics[42] + 500
dec2 <- plastics %>%
decompose(type='multiplicative')
autoplot(dec2, series='Data') +
autolayer(seasadj(dec2), series='Adj. Outlier')
plastics[26] <- plastics[26] + 500
dec2 <- plastics %>%
decompose(type='multiplicative')
autoplot(dec2, series='Data') +
autolayer(seasadj(dec2), series='Adj. Outlier')
library(forecast)
library(fma)
library(tidyverse)
library(seasonal)
plastics %>%
decompose(type='multiplicative') %>%
autoplot()
seasonplot(plastics,
ylab="Sales (Thousands)",
xlab="Month",
year.labels.left=TRUE,
main="Plastics Seasonal Plot",
col = 1:5)
library(forecast)
library(fma)
library(tidyverse)
library(seasonal)
library(forecast)
library(fma)
library(tidyverse)
library(seasonal)
help(plastics, package = fma)
autoplot(plastics)
plastics %>%
decompose(type='multiplicative') %>%
autoplot()
seasonplot(plastics,
ylab="Sales (Thousands)",
xlab="Month",
year.labels.left=TRUE,
main="Plastics Seasonal Plot",
col = 1:5)
seasons <- plastics %>%
decompose(type='multiplicative')
autoplot(plastics, series='Data') +
autolayer(seasadj(seasons), series='Seasonally Adjusted')
plastics[26] <- plastics[26] + 500
dec2 <- plastics %>%
decompose(type='multiplicative')
autoplot(dec2, series='Data') +
autolayer(seasadj(dec2), series='Adj. Outlier')
library(forecast)
library(fma)
library(tidyverse)
library(seasonal)
plastics[2] <- plastics[2] + 500
dec3 <- plastics %>%
decompose(type='multiplicative')
autoplot(dec3, series='Data') +
autolayer(seasadj(dec3), series='Adj. Outlier 2')
plastics[58] <- plastics[58] + 500
dec4 <- plastics %>%
decompose(type='multiplicative')
autoplot(plastics, series='Data') +
autolayer(seasadj(dec4), series='Adj. Outlier 2')
plastics[58] <- plastics[58] + 500
dec4 <- plastics %>%
decompose(type='multiplicative')
autoplot(dec3, series='Data') +
autolayer(seasadj(dec4), series='Adj. Outlier 2')
