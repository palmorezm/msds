labs(
x = "PredictionNumber",
y = "PH",
subtitle =
"Combined Predictions Scatterplot: R and Python") +
geom_point(fill = "white",
size=1,
shape=1) +
geom_smooth(formula = y~x,
method = "loess",
size=1,
se = TRUE,
color = "goldenrod1",
lty = "solid" ) +
geom_smooth(formula = y~x,
method = "lm",
size=1,
se = TRUE,
color = "grey24",
lty = "dotdash")
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
ggplot(aes(PredictionNumber, value, color = key)) +
labs(
x = "PredictionNumber",
y = "PH",
subtitle =
"Combined Predictions Scatterplot: R and Python") +
geom_point(fill = "white",
size=1,
shape=1) +
geom_smooth(formula = y~x,
method = "loess",
size=1,
se = F,
color = "goldenrod1",
lty = "solid") +
geom_smooth(formula = y~x,
method = "lm",
size=1,
se = T,
color = "grey24",
lty = "dotdash")
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
ggplot(aes(PredictionNumber, value, color = key)) +
labs(
x = "PredictionNumber",
y = "PH",
subtitle =
"Combined Predictions Scatterplot: R and Python") +
geom_point(fill = "white",
size=1,
shape=1) +
geom_smooth(formula = y~x,
method = "loess",
size=1,
se = T,
color = "goldenrod1",
lty = "solid") +
geom_smooth(formula = y~x,
method = "lm",
size=1,
se = F,
color = "grey24",
lty = "dotdash")
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
ggplot(aes(PredictionNumber, value, color = key)) +
labs(
x = "PredictionNumber - \'Position\'",
y = "PH",
subtitle =
"Combined Predictions Scatterplot: R and Python") +
geom_point(fill = "white",
size=1,
shape=1) +
geom_smooth(formula = y~x,
method = "loess",
size=1,
se = T,
color = "goldenrod1",
lty = "solid") +
geom_smooth(formula = y~x,
method = "lm",
size=1,
se = F,
color = "grey24",
lty = "dotdash")
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
ggplot(aes(PredictionNumber, value, color = key)) +
labs(
x = "PredictionNumber (Position)",
y = "PH",
subtitle =
"Combined Predictions Scatterplot: R and Python") +
geom_point(fill = "white",
size=1,
shape=1) +
geom_smooth(formula = y~x,
method = "loess",
size=1,
se = T,
color = "goldenrod1",
lty = "solid") +
geom_smooth(formula = y~x,
method = "lm",
size=1,
se = F,
color = "grey24",
lty = "dotdash")
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber)
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key)
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, color = key)) + geom_boxplot()
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, color = key)) + geom_violin(aes())
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, color = key)) + geom_boxplot(aes())
RandPy.boxplot <- RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, color = key)) + geom_boxplot(aes())
RandPy.hist <- RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, color = key)) + geom_histogram(aes())
RandPy.hist
RandPy.hist <- RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, fill = key)) + geom_histogram(aes())
RandPy.hist
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, fill = key)) + geom_histogram(aes())
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, fill = key, color = value)) + geom_histogram(aes())
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, fill = key, color = key)) +
geom_histogram(aes())
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, fill = key, color = key)) +
geom_histogram(aes()) + geom_density()
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, fill = key, color = key)) +
geom_density(aes())
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, fill = key, color = key)) +
geom_density(aes(alpha = .5))
RandPy.hist <- RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, fill = key)) + geom_histogram(aes(alpha = .5))
RandPy.hist
RandPy.hist <- RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, fill = key)) +
geom_histogram(aes(alpha = .5)) +
theme(legend.position = "none")
RandPy.hist
RandPy.density <- RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, fill = key, color = key)) +
geom_density(aes(alpha = .5)) +
theme(legend.position = "none")
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, fill = key, color = key)) +
geom_point(aes(alpha = .5)) +
theme(legend.position = "none")
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(key, value, fill = key, color = key)) +
geom_point(aes(alpha = .5)) +
theme(legend.position = "none")
pred.comparison %>%
gather(key, value) %>%
filter(key != "Type") %>%
mutate(Value = as.numeric(value)) %>%
filter(key !="Difference") %>%
ggplot(aes(key, Value)) + geom_point(aes(ymin = min(Py),
ymax = max(Py),
color=key,
)) +
geom_hline(yintercept = 0.24442111, color = "Orange") +
geom_hline(yintercept = 0.01246797, color = "Orange") +
geom_hline(yintercept = 0.23575419, color = "Black") +
geom_hline(yintercept = 0.01983906, color = "Black") +
annotate("rect", xmin = 0.01983906, xmax=0.01246797,
ymin = 1, ymax = 0, alpha = 0.25) +
coord_flip() +
labs(subtitle = "Performance Differences by Programming Language")
pred.comparison %>%
gather(key, value) %>%
filter(key != "Type") %>%
mutate(Value = as.numeric(value)) %>%
filter(key !="Difference") %>%
ggplot(aes(key, Value)) + geom_pointrange(aes(ymin = min(Py),
ymax = max(Py),
color=key,
)) +
geom_hline(yintercept = 0.24442111, color = "Orange") +
geom_hline(yintercept = 0.01246797, color = "Orange") +
geom_hline(yintercept = 0.23575419, color = "Black") +
geom_hline(yintercept = 0.01983906, color = "Black") +
annotate("rect", xmin = 0.01983906, xmax=0.01246797,
ymin = 1, ymax = 0, alpha = 0.25) +
coord_flip() +
labs(subtitle = "Performance Differences by Programming Language")
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, PredictionNumber, fill = key, color = key)) +
geom_point(aes(alpha = .5)) +
theme(legend.position = "none")
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(PredictionNumber, value, fill = key, color = key)) +
geom_point(aes(alpha = .5)) +
theme(legend.position = "none")
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(PredictionNumber, value, fill = key, color = key)) +
geom_point(aes(alpha = .5)) +
theme(legend.position = "none") +
geom_smooth(formula = y~x,
method = "loess",
size=1,
se = T,
color = "goldenrod1",
lty = "solid")
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(PredictionNumber, value, fill = key, color = key)) +
geom_point(aes(alpha = .5)) +
theme(legend.position = "none") +
geom_smooth(formula = y~x,
method = "loess",
size=1,
se = T,
color = key,
lty = "dotdash")
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(PredictionNumber, value, fill = key, color = key)) +
geom_point(aes(alpha = .5)) +
theme(legend.position = "none") +
geom_smooth(formula = y~x,
method = "loess",
size=1,
se = T,
color = c("yellow", "black"),
lty = "dotdash")
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(PredictionNumber, value, fill = key, color = key)) +
geom_point(aes(alpha = .5)) +
theme(legend.position = "none") +
geom_smooth(formula = y~x,
method = "loess",
size=1,
se = T,
color = "black",
lty = "dotdash")
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(PredictionNumber, value, fill = key, color = key)) +
geom_point(aes(alpha = .5)) +
theme(legend.position = "none") +
geom_smooth(formula = y~x,
method = "loess",
size=1,
se = T,
color = "grey32",
lty = "dotdash")
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(PredictionNumber, value, fill = key, color = key)) +
geom_point(aes(alpha = .5)) +
theme(legend.position = "none") +
geom_smooth(formula = y~x,
method = "loess",
size=1,
se = T,
color = "grey32",
lty = "dotted")
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(PredictionNumber, value, fill = key, color = key)) +
geom_point(aes(alpha = .5)) +
theme(legend.position = "none") +
geom_smooth(formula = y~x,
method = "loess",
size=1,
se = T,
color = "grey32",
lty = "dotted",
alpha = 0.25)
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(PredictionNumber, value, fill = key, color = key)) +
geom_point(aes(alpha = .5)) +
theme(legend.position = "none") +
geom_smooth(formula = y~x,
method = "loess",
size=1,
se = T,
color = "grey32",
lty = "dotted",
alpha = 0.5)
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(PredictionNumber, value, fill = key, color = key)) +
geom_point(aes(alpha = .5)) +
theme(legend.position = "none") +
geom_smooth(formula = y~x,
method = "loess",
size=1,
se = T,
color = "grey32",
lty = "dotted",
alpha = 0.38)
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(PredictionNumber, value, fill = key, color = key)) +
geom_point(aes(alpha = .5)) +
theme(legend.position = "none") +
geom_smooth(formula = y~x,
method = "loess",
size=1,
se = T,
color = "grey32",
lty = "dotted",
alpha = 0.38) +
labs(subtitle = "LOESS Regression by Prediction and Language")
RandPy.boxplot <- RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, color = key)) + geom_boxplot(aes()) +
labs(subtitle = "Distribution of Predictions by Language")
RandPy.hist <- RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, fill = key)) +
geom_histogram(aes(alpha = .5)) +
theme(legend.position = "none") +
labs(subtitle = "Stacked Count of Predictions by Language")
RandPy.density <- RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(value, fill = key, color = key)) +
geom_density(aes(alpha = .5)) +
theme(legend.position = "none") +
labs(subtitle = "Density of Predictions by Language")
RandPy.loess <-RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
group_by(key) %>%
ggplot(aes(PredictionNumber, value, fill = key, color = key)) +
geom_point(aes(alpha = .5)) +
theme(legend.position = "none") +
geom_smooth(formula = y~x,
method = "loess",
size=1,
se = T,
color = "grey32",
lty = "dotted",
alpha = 0.38) +
labs(subtitle = "LOESS Regression by Prediction and Language")
ggpubr::ggarrange(RandPy.boxplot, RandPy.density, RandPy.loess, RandPy.hist, ncol = 2)
ggpubr::ggarrange(RandPy.boxplot, RandPy.density, RandPy.loess, RandPy.hist, ncol = 2, nrow = 2)
ggpubr::ggarrange(RandPy.boxplot, RandPy.density, RandPy.loess, RandPy.hist, ncol = 2, nrow = 4)
ggpubr::ggarrange(RandPy.boxplot, RandPy.density, RandPy.loess, RandPy.hist, ncol = 2, nrow = 1)
RandPy %>%
dplyr::select(RPH, PyPH, PredictionNumber) %>%
rename(R=RPH, Py=PyPH) %>%
gather(key, value, -PredictionNumber) %>%
ggplot(aes(PredictionNumber, value, color = key)) +
labs(
x = "PredictionNumber (Position)",
y = "PH",
subtitle =
"Combined Predictions Scatterplot: R and Python") +
geom_point(fill = "white",
size=1,
shape=1) +
geom_smooth(formula = y~x,
method = "loess",
size=1,
se = T,
color = "yellow1",
lty = "solid") +
geom_smooth(formula = y~x,
method = "lm",
size=1,
se = F,
color = "grey24",
lty = "dotdash")
