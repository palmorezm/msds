cainc1.personalincome <- subset(cainc1, LineCode==1)
cainc1.population <- subset(cainc1, LineCode==2)
cainc1.percapitaincome<- subset(cainc1, LineCode==3)
cainc1 <- rbind(cainc1.personalincome, cainc1.population, cainc1.percapitaincome)
View(mcainc1)
# Cleaning
# Determine the presence of and deal with missing Values
# sum(is.na(mcainc1)) # 153 - recheck for assurance
# which(is.na(mcainc1))
# mcainc1[which(is.na(mcainc1)),] # Displays all NA's (if there are any)
# Missing values in this data are direct from BEA
# Review each subset before omission/imputation
# sum(is.na(cainc1.percapitaincome)) # 1 Missing
# which(is.na(cainc1.percapitaincome)) # At 6397
# cainc1.percapitaincome[6397,] # All missing
# which(is.na(cainc1.personalincome)) # At 6397
# cainc1.personalincome[6397,] # All missing
# which(is.na(cainc1.population)) # At 6397
# cainc1.population[6397,] # Ditto as above
# The one missing entry from the data created 153 missing entries when gathered
mcainc1 <- na.omit(mcainc1)
sum(is.na(mcainc1)) # 0
# However, omission removed more than expected
# count(mcainc1) - 153 # Expected 153 removals
# sum(is.na(mcainc1)) # The value has changed.
# Solution: During rerun update notes!
# Regional Price Parities by MSA from 2008 - 2019
# Extraction
rpp <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/rpp_msa_11yr.csv"))
rpp <- rpp[4:nrow(rpp),]
colnames(rpp) <- rpp[1,]
rpp <- rpp[-1,]
View(rpp)
# Tidying
mrpp <- rpp %>%
gather(key, value, -GeoFips, -GeoName, -LineCode, -Description)
rpp.allitems <- subset(mrpp, LineCode==1)
rpp.goods <- subset(mrpp, LineCode==2)
rpp.rents <- subset(mrpp, LineCode==3)
rpp.services <- subset(mrpp, LineCode==4)
mrpp <- rbind(rpp.allitems, rpp.goods, rpp.rents, rpp.services)
View(mrpp)
# Determine the presence of and deal with missing Values
sum(is.na(mrpp)) # 28
which(is.na(mrpp))
mrpp[which(is.na(mrpp)),] # Displays all NA's (if there are any)
# There are no missing values in this data set
# Income, Population, & Per Capita Income by MSA from 1969
# Extraction
cainc1 <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/CAINC1__ALL_AREAS_1969_2019.csv"))
l1 <- colnames(cainc1[1:8])
l2 <- seq(1969, 2019, 1)
l3 <- c(l1, l2)
colnames(cainc1) <- l3
# Tidying
mcainc1 <- cainc1 %>%
gather(year, value,
-GeoFIPS, -GeoName, -Region, -TableName, -LineCode,
-IndustryClassification, -Description, -Unit)
cainc1.personalincome <- subset(cainc1, LineCode==1)
cainc1.population <- subset(cainc1, LineCode==2)
cainc1.percapitaincome<- subset(cainc1, LineCode==3)
cainc1 <- rbind(cainc1.personalincome, cainc1.population, cainc1.percapitaincome)
View(mcainc1)
# Cleaning
# Determine the presence of and deal with missing Values
# sum(is.na(mcainc1)) # 153 - recheck for assurance
# which(is.na(mcainc1))
# mcainc1[which(is.na(mcainc1)),] # Displays all NA's (if there are any)
# Missing values in this data are direct from BEA
# Review each subset before omission/imputation
# sum(is.na(cainc1.percapitaincome)) # 1 Missing
# which(is.na(cainc1.percapitaincome)) # At 6397
# cainc1.percapitaincome[6397,] # All missing
# which(is.na(cainc1.personalincome)) # At 6397
# cainc1.personalincome[6397,] # All missing
# which(is.na(cainc1.population)) # At 6397
# cainc1.population[6397,] # Ditto as above
# The one missing entry from the data created 153 missing entries when gathered
mcainc1 <- na.omit(mcainc1)
sum(is.na(mcainc1)) # 0
# However, omission removed more than expected
# count(mcainc1) - 153 # Expected 153 removals
# sum(is.na(mcainc1)) # The value has changed.
# Solution: During rerun update notes!
# Regional Price Parities by MSA from 2008 - 2019
# Extraction
rpp <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/rpp_msa_11yr.csv"))
rpp <- rpp[4:nrow(rpp),]
colnames(rpp) <- rpp[1,]
rpp <- rpp[-1,]
# Tidying
mrpp <- rpp %>%
gather(key, value, -GeoFips, -GeoName, -LineCode, -Description)
rpp.allitems <- subset(mrpp, LineCode==1)
rpp.goods <- subset(mrpp, LineCode==2)
rpp.rents <- subset(mrpp, LineCode==3)
rpp.services <- subset(mrpp, LineCode==4)
mrpp <- rbind(rpp.allitems, rpp.goods, rpp.rents, rpp.services)
View(mrpp)
# Determine the presence of and deal with missing Values
sum(is.na(mrpp)) # 28
which(is.na(mrpp))
mrpp[which(is.na(mrpp)),] # Displays all NA's (if there are any)
# There are no missing values in this data set
mcainc1
mrpp
mcainc1
mrpp
mcainc1
# Income, Population, & Per Capita Income by MSA from 1969
# Extraction
cainc1 <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/CAINC1__ALL_AREAS_1969_2019.csv"))
l1 <- colnames(cainc1[1:8])
l1 <- colnames(cainc1["GeoFips" & 2:8])
l1 <- colnames(cainc1["GeoFips" + 2:8])
l1 <- colnames(cainc1["GeoFips" 2:8])
l1 <- colnames(cainc1[1:8])
l2 <- seq(1969, 2019, 1)
l3 <- c(l1, l2)
colnames(cainc1) <- l3
colnames(cainc1)
colnames(cainc1[1])
colnames(cainc1[1]) <- "GeoFips"
# Income, Population, & Per Capita Income by MSA from 1969
# Extraction
cainc1 <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/CAINC1__ALL_AREAS_1969_2019.csv"))
l1 <- colnames(cainc1[1:8])
l2 <- seq(1969, 2019, 1)
l3 <- c(l1, l2)
colnames(cainc1) <- l3
colnames(cainc1[1]) <- "GeoFips"
colnames(cainc1)
colnames(cainc1[1,]) <- "GeoFips"
colnames(cainc1)
colnames(cainc1)
# Tidying
mcainc1 <- cainc1 %>%
gather(year, value,
-GeoFIPS, -GeoName, -Region, -TableName, -LineCode,
-IndustryClassification, -Description, -Unit)
df <- merge(mcainc1, mrpp, by="GeoFIPS")
# Income, Population, & Per Capita Income by MSA from 1969
# Extraction
cainc1 <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/CAINC1__ALL_AREAS_1969_2019.csv"))
l1 <- colnames(cainc1[1:8])
l2 <- seq(1969, 2019, 1)
l3 <- c(l1, l2)
colnames(cainc1) <- l3
View(cainc1)
# Income, Population, & Per Capita Income by MSA from 1969
# Extraction
cainc1 <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/CAINC1__ALL_AREAS_1969_2019.csv"))
l1 <- colnames(cainc1[1:8])
l2 <- seq(1969, 2019, 1)
l3 <- c(l1, l2)
colnames(cainc1) <- l3
# Tidying
mcainc1 <- cainc1 %>%
gather(year, value,
-GeoFIPS, -GeoName, -Region, -TableName, -LineCode,
-IndustryClassification, -Description, -Unit)
cainc1.personalincome <- subset(cainc1, LineCode==1)
cainc1.population <- subset(cainc1, LineCode==2)
cainc1.percapitaincome<- subset(cainc1, LineCode==3)
cainc1 <- rbind(cainc1.personalincome, cainc1.population, cainc1.percapitaincome)
View(mcainc1)
# Cleaning
# Determine the presence of and deal with missing Values
# sum(is.na(mcainc1)) # 153 - recheck for assurance
# which(is.na(mcainc1))
# mcainc1[which(is.na(mcainc1)),] # Displays all NA's (if there are any)
# Missing values in this data are direct from BEA
# Review each subset before omission/imputation
# sum(is.na(cainc1.percapitaincome)) # 1 Missing
# which(is.na(cainc1.percapitaincome)) # At 6397
# cainc1.percapitaincome[6397,] # All missing
# which(is.na(cainc1.personalincome)) # At 6397
# cainc1.personalincome[6397,] # All missing
# which(is.na(cainc1.population)) # At 6397
# cainc1.population[6397,] # Ditto as above
# The one missing entry from the data created 153 missing entries when gathered
mcainc1 <- na.omit(mcainc1)
sum(is.na(mcainc1)) # 0
# However, omission removed more than expected
# count(mcainc1) - 153 # Expected 153 removals
# sum(is.na(mcainc1)) # The value has changed.
# Solution: During rerun update notes!
# Regional Price Parities by MSA from 2008 - 2019
# Extraction
rpp <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/rpp_msa_11yr.csv"))
rpp <- rpp[4:nrow(rpp),]
colnames(rpp) <- rpp[1,]
rpp <- rpp[-1,]
# Tidying
mrpp <- rpp %>%
gather(key, value, -GeoFips, -GeoName, -LineCode, -Description)
rpp.allitems <- subset(mrpp, LineCode==1)
rpp.goods <- subset(mrpp, LineCode==2)
rpp.rents <- subset(mrpp, LineCode==3)
rpp.services <- subset(mrpp, LineCode==4)
mrpp <- rbind(rpp.allitems, rpp.goods, rpp.rents, rpp.services)
View(mrpp)
# Determine the presence of and deal with missing Values
sum(is.na(mrpp)) # 28
which(is.na(mrpp))
mrpp[which(is.na(mrpp)),] # Displays all NA's (if there are any)
# There are no missing values in this data set
df <- merge(mcainc1, mrpp, by="GeoFIPS")
mcainc1
mrpp
cbind(mcainc1, mrpp)
rbind(mcainc1, mrpp)
rbind(mcainc1, mrpp)
mcainc1 %>%
rename(GeoFIPS = GeoFips)
mcainc1 %>%
rename(GeoFips = GeoFIPS)
mcainc1 <- mcainc1 %>%
rename(GeoFips = GeoFIPS)
merge(mcainc1, mrpp, by="GeoFips")
merge(mcainc1, mrpp, by=GeoFips)
merge(mcainc1, mrpp, by='GeoFips')
cbind(mcainc1)
dim(mcainc1)
dim(mrpp)
dim(mcainc1)
dim(mrpp)
rpp
mrpp
mrpp %>%
rename(year = key)
mrpp <- mrpp %>%
rename(year = key)
mrpp
rbind(mrpp, mcainc1)
mrpp
mrpp
mcainc1
mcainc1[-"TableName"]
mrpp
dim(mcainc1)
dim(mrpp)
mrpp
mcainc1 %>%
dplyr::select(GeoFips, GeoName, LineCode,
Description, year, value)
mcainc1
mcainc1 %>%
dplyr::select(GeoFips, GeoName, LineCode,
Description, year, value)
mcainc1 <- mcainc1 %>%
dplyr::select(GeoFips, GeoName, LineCode,
Description, year, value)
mrpp
mcainc1
cbind(mrpp, mcainc1)
rbind(mrpp, mcainc1)
mrpp <- mrpp %>%
rename(year = key) %>%
mutate(LineCode2 = LineCode + 42)
# Income, Population, & Per Capita Income by MSA from 1969
# Extraction
cainc1 <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/CAINC1__ALL_AREAS_1969_2019.csv"))
l1 <- colnames(cainc1[1:8])
l2 <- seq(1969, 2019, 1)
l3 <- c(l1, l2)
colnames(cainc1) <- l3
# Tidying
mcainc1 <- cainc1 %>%
gather(year, value,
-GeoFIPS, -GeoName, -Region, -TableName, -LineCode,
-IndustryClassification, -Description, -Unit)
cainc1.personalincome <- subset(cainc1, LineCode==1)
cainc1.population <- subset(cainc1, LineCode==2)
cainc1.percapitaincome<- subset(cainc1, LineCode==3)
cainc1 <- rbind(cainc1.personalincome, cainc1.population, cainc1.percapitaincome)
View(mcainc1)
# Cleaning
# Determine the presence of and deal with missing Values
# sum(is.na(mcainc1)) # 153 - recheck for assurance
# which(is.na(mcainc1))
# mcainc1[which(is.na(mcainc1)),] # Displays all NA's (if there are any)
# Missing values in this data are direct from BEA
# Review each subset before omission/imputation
# sum(is.na(cainc1.percapitaincome)) # 1 Missing
# which(is.na(cainc1.percapitaincome)) # At 6397
# cainc1.percapitaincome[6397,] # All missing
# which(is.na(cainc1.personalincome)) # At 6397
# cainc1.personalincome[6397,] # All missing
# which(is.na(cainc1.population)) # At 6397
# cainc1.population[6397,] # Ditto as above
# The one missing entry from the data created 153 missing entries when gathered
mcainc1 <- na.omit(mcainc1)
sum(is.na(mcainc1)) # 0
# However, omission removed more than expected
# count(mcainc1) - 153 # Expected 153 removals
# sum(is.na(mcainc1)) # The value has changed.
# Solution: During rerun update notes!
# Regional Price Parities by MSA from 2008 - 2019
# Extraction
rpp <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/rpp_msa_11yr.csv"))
rpp <- rpp[4:nrow(rpp),]
colnames(rpp) <- rpp[1,]
rpp <- rpp[-1,]
# Tidying
mrpp <- rpp %>%
gather(key, value, -GeoFips, -GeoName, -LineCode, -Description)
rpp.allitems <- subset(mrpp, LineCode==1)
rpp.goods <- subset(mrpp, LineCode==2)
rpp.rents <- subset(mrpp, LineCode==3)
rpp.services <- subset(mrpp, LineCode==4)
mrpp <- rbind(rpp.allitems, rpp.goods, rpp.rents, rpp.services)
View(mrpp)
# Determine the presence of and deal with missing Values
sum(is.na(mrpp)) # 28
which(is.na(mrpp))
mrpp[which(is.na(mrpp)),] # Displays all NA's (if there are any)
# There are no missing values in this data set
mcainc1 <- mcainc1 %>%
rename(GeoFips = GeoFIPS)
mrpp <- mrpp %>%
rename(year = key) %>%
mutate(LineCode2 = LineCode + 42)
mcainc1
mcainc1["LineCode"]
mrpp["LineCode"]
table(mrpp["LineCode"])
table(mcainc1["LineCode"])
table(mrpp["LineCode"])
mrpp %>%
rename(year = key) %>%
mutate(LineCode2 = LineCode + 42)
mrpp %>%
rename(year = key) %>%
mutate(LineCode2 = LineCode + 10)
mrpp %>%
rename(year = key) %>%
mutate(LineCode2 = LineCode)
mrpp %>%
rename(year = key) %>%
mutate(LineCode2 = as.numeric(LineCode), + 10)
mrpp %>%
rename(year = key) %>%
mutate(LineCode2 = as.numeric(LineCode) + 10)
table(mcainc1["LineCode"])
table(mrpp["LineCode"])
table(mcainc1["LineCode"])
table(mrpp["LineCode"])
mrpp %>%
rename(year = key) %>%
mutate(LineCode2 = as.numeric(LineCode) + 10) %>%
dplyr::select(-LineCode) %>%
rename(LineCode = LineCode2)
mcainc1 <- mcainc1 %>%
dplyr::select(GeoFips, GeoName, LineCode,
Description, year, value)
rbind(mrpp, mcainc1)
mrpp <- mrpp %>%
rename(year = key) %>%
mutate(LineCode2 = as.numeric(LineCode) + 10) %>%
dplyr::select(-LineCode) %>%
rename(LineCode = LineCode2) %>%
dplyr::select(GeoFips, GeoName, LineCode,
Description, year, value)
mcainc1 <- mcainc1 %>%
dplyr::select(GeoFips, GeoName, LineCode,
Description, year, value)
rbind(mrpp, mcainc1)
rbind(mcainc1, mrpp)
rbind(mcainc1, mrpp) %>%
as.numeric(year, value)
rbind(mcainc1, mrpp) %>%
as.numeric(year)
rbind(mcainc1, mrpp) %>%
mutate(Year = as.numeric(year),
Value = as.numeric(value))
rbind(mcainc1, mrpp) %>%
mutate(Year = as.numeric(year),
Value = as.numeric(value)) %>%
dplyr::select(-year, -value)
df <- rbind(mcainc1, mrpp) %>%
mutate(Year = as.numeric(year),
Value = as.numeric(value)) %>%
dplyr::select(-year, -value)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(maps)
data("county.fips")
df_pop_county <- data.frame(region=county.fips$fips)
df_pop_county$value <- county.fips$fips
y <- df_pop_county$value
df_pop_county$color <- gray(y / max(y))
counties <- county.fips %>%
left_join(df_pop_county, by = c('fips' = 'region'))
map("county", fill = TRUE, col = counties$color)
# rpp[9:nrow(rpp),1:15]
county.fips.rpp <- rpp[9:nrow(rpp),1:15]
df_pop_county.rpp <- data.frame(region=county.fips.rpp$GeoFips)
df_pop_county.rpp$value <- county.fips.rpp$`2019`
map("county", fill = TRUE, col = df_pop_county.rpp$value)
library(plotrix)
df_pop_county.rpp$col <- color.scale(df_pop_county.rpp$value)
df_pop_county.rpp$col <- color.scale(df_pop_county.rpp$value, alpha = 0.5, color.spec = "hsv")
library(maps)
df_pop_county <- data.frame(region=df$GeoFips)
df_pop_county$value <- df$GeoFips
y <- df_pop_county$value
df_pop_county$color <- gray(y / max(y))
map("county", fill = T)
map("county", fill = T, col = df$Value)
map("county", fill = T, col = df$Year)
map("county", fill = T, col = df$GeoFips)
df %>%
filter(LineCode == "1")
df %>%
filter(LineCode == "1" & Year == "1969")
df %>%
filter(LineCode == "11" & Year == "1969") %>%
map("county", fill = T, col = )
df %>%
filter(LineCode == "11" & Year == "1969")
df %>%
filter(LineCode == "11" & Year == "2008")
df %>%
filter(LineCode == "11" & Year == "2008") %>%
mutate(Color = value) %>%
dplyr::select(Value)
df %>%
filter(LineCode == "11" & Year == "2008") %>%
mutate(Color = value) %>%
dplyr::select(value)
df %>%
filter(LineCode == "11" & Year == "2008") %>%
mutate(Color = Value) %>%
dplyr::select(Value)
df %>%
filter(LineCode == "11" & Year == "2008") %>%
mutate(Color = Value) %>%
dplyr::select(GeoFips, GeoName, Value)
df %>%
filter(LineCode == "11" & Year == "2008") %>%
mutate(Color = Value) %>%
dplyr::select(GeoFips, GeoName, Year, Value)
df %>%
filter(LineCode == "11" & Year == "2008") %>%
mutate(Color = Value)
df.test <- df %>%
filter(LineCode == "11" & Year == "2008") %>%
mutate(Color = Value)
map("county", fill = T, col = df.test$Value)
?maps::map()
map("county", fill = F, col = df.test$Value)
df.test <- df %>%
filter(LineCode == "11" & Year == "2008") %>%
mutate(Color = scale(Value))
df.test
map("county", fill = F, col = df.test$Color)
df.test <- df %>%
filter(LineCode == "11" & Year == "2008") %>%
mutate(Color = scale(Value) + 100)
df.test
map("county", fill = F, col = df.test$Color)
df.test
df.test <- df %>%
filter(LineCode == "11" & Year == "2008") %>%
mutate(Color = scale(Value) + 100) %>%
slice(-1)
df.test
df.test <- df %>%
filter(LineCode == "11" & Year == "2008") %>%
mutate(Color = scale(Value) + 100) %>%
slice(-1, -57585)
df.test
df.test <- df %>%
filter(LineCode == "11" & Year == "2008") %>%
mutate(Color = scale(Value) + 100) %>%
slice(-1, -2)
df.test
df.test <- df %>%
filter(LineCode == "11" & Year == "2008") %>%
mutate(Color = scale(Value) + 100) %>%
slice(-1, -2)
df.test
map("county", fill = F, col = df.test$Color)
map("county", fill = F, col = df.test$Value)
map("county", fill = F, col = df.test$Value)
map("county", fill = T, col = df.test$Value)
map("county", fill = T, col = df.test$Color)
map("county", fill = T, col = df.test$Color$Color)
df.test$Color
df.test$Color[,1]
map("county", fill = T, col = df.test$Color$Color[,1])
map("county", fill = T, col = df.test$Color$Color[,1])
map("county", fill = T, col = df.test$Color[,1])
library(sf)
df.test$Color[,1]
Color[,1]
map("county", fill = T, col = df.test$Color[,1])
map("county", fill = T, col = df.test$Value)
map("county", fill = T, col = df.test$Color[,1])
map("county", fill = T, col = df.test$Value)
