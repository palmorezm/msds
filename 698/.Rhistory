# Tidying
minc <- cainc1 %>%
gather(year, value, -GeoFips,
-GeoName, -LineCode, -Description)
minc.personalincome <- subset(minc, LineCode==1)
minc.population <- subset(minc, LineCode==2)
minc.percapitaincome<- subset(minc, LineCode==3)
minc <- rbind(minc.personalincome, minc.population, minc.percapitaincome)
df1 <- minc %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year >= 2010) %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value")
View(df1)
View(df2)
rbind(df1, df2)
rbind(df1, df2) %>% View()
cbind(df1, df2) %>% View()
rbind(df1, df2) %>% View()
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2010)
df1 <- minc %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2010) %>%
slice(-1)
df1 <- minc %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2019) %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2019)
View(df1)
View(df2)
merge(df1, df2)
merge(df1, df2, by = "GeoFips")
merged.df <- merge(df1, df2, by = "GeoFips")
View(merged.df)
sum(is.na(merged.df))
View(merged.df)
# Test merge for 2019
merged.df.2019 <- merge(df1, df2, by = "GeoFips")
df1 <- minc %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2018) %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2018)
merged.df.2018 <- merge(df1, df2, by = "GeoFips")
View(merged.df.2018)
View(merged.df.2019)
View(merged.df.2018)
rbind(merged.df.2018, merged.df.2019)
rbind(merged.df.2018, merged.df.2019) %>% View()
# Prepare for test Merge
df1 <- minc %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2019) %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2019)
# Test merge for 2019
merged.df.2019 <- merge(df1, df2, by = "GeoFips")
# Complete and functioning - for 2019
# 2018
df1 <- minc %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2018) %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2018)
merged.df.2018 <- merge(df1, df2, by = "GeoFips")
# 2017
df1 <- minc %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2017) %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2017)
merged.df.2017 <- merge(df1, df2, by = "GeoFips")
# 2016
df1 <- minc %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2016) %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2016)
merged.df.2016 <- merge(df1, df2, by = "GeoFips")
# 2015
df1 <- minc %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2015) %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2015)
merged.df.2015 <- merge(df1, df2, by = "GeoFips")
# 2014
df1 <- minc %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2014) %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2014)
merged.df.2014 <- merge(df1, df2, by = "GeoFips")
# 2013
df1 <- minc %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2013) %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2013)
merged.df.2013 <- merge(df1, df2, by = "GeoFips")
# 2012
df1 <- minc %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2012) %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2012)
merged.df.2012 <- merge(df1, df2, by = "GeoFips")
# 2011
df1 <- minc %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2011) %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2011)
merged.df.2011 <- merge(df1, df2, by = "GeoFips")
# 2010
df1 <- minc %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2010) %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2010)
merged.df.2010 <- merge(df1, df2, by = "GeoFips")
source('~/GitHub/msds/698/GEOID_GEOFIPS.R', echo=TRUE)
rbind(merged.df.2019, merged.df.2018,
merged.df.2017, merged.df.2016,
merged.df.2015, merged.df.2014,
merged.df.2013, merged.df.2012,
merged.df.2011, merged.df.2010) %>% View()
# Review Merges
merged.df <- rbind(merged.df.2019, merged.df.2018,
merged.df.2017, merged.df.2016,
merged.df.2015, merged.df.2014,
merged.df.2013, merged.df.2012,
merged.df.2011, merged.df.2010)
colnames(merged.df)
# Rename and drop columns
merged.df[-5:6,]
# Rename and drop columns
merged.df[-c(5:6),]
# Rename and drop columns
merged.df[-c(5:6),] %>% View()
# Rename and drop columns
merged.df %>%
dplyr::select(-GeoName.y, -year.y)
# Rename and drop columns
merged.df %>%
dplyr::select(-GeoName.y, -year.y) %>% View()
# Rename and drop columns
merged.df <- merged.df %>%
dplyr::select(-GeoName.y, -year.y)
colnames(merged.df) <- c("GeoFips",
"GeoName", "year", "MEDINC", "MEDVAL")
View(merged.df)
merged.df %>%
mutate(PMT = MEDVAL * 0.8 * (IR / 12)/(1 - (1/(1 + IR/12)^360)),
QINC = PMT * 4 * 12,
HAI = (MEDINC / QINC) * 100)
merged.df %>%
mutate(IR = 0.035,
PMT = MEDVAL * 0.8 * (IR / 12)/(1 - (1/(1 + IR/12)^360)),
QINC = PMT * 4 * 12,
HAI = (MEDINC / QINC) * 100)
merged.df %>%
mutate(IR = 0.035,
PMT = MEDVAL * 0.8 * (IR / 12)/(1 - (1/(1 + IR/12)^360)),
QINC = PMT * 4 * 12,
HAI = (MEDINC / QINC) * 100) %>% View()
merged.df %>%
mutate(IR = 0.035,
PMT = MEDVAL * 0.8 * (IR / 12)/(1 - (1/(1 + IR/12)^360)),
QINC = PMT * 4 * 12,
HAI = (MEDINC / QINC) * 100) %>%
filter(HAI >= 0 & HAI <= 500) %>%
arrange(desc(HAI))
merged.df %>%
mutate(IR = 0.035,
PMT = MEDVAL * 0.8 * (IR / 12)/(1 - (1/(1 + IR/12)^360)),
QINC = PMT * 4 * 12,
HAI = (MEDINC / QINC) * 100) %>%
filter(HAI >= 0 & HAI <= 2000) %>%
arrange(desc(HAI))
merged.df %>%
mutate(IR = 0.035,
PMT = MEDVAL * 0.8 * (IR / 12)/(1 - (1/(1 + IR/12)^360)),
QINC = PMT * 4 * 12,
HAI = (MEDINC / QINC) * 100) %>%
filter(HAI >= 0 & HAI <= 2000) %>%
arrange(desc(HAI)) %>% View()
merged.df %>%
filter(year == 2019) %>%
mutate(IR = 0.035,
PMT = MEDVAL * 0.8 * (IR / 12)/(1 - (1/(1 + IR/12)^360)),
QINC = PMT * 4 * 12,
HAI = (MEDINC / QINC) * 100) %>%
filter(HAI >= 0 & HAI <= 2000) %>%
arrange(desc(HAI)) %>% View()
View(merged.df)
merged.df %>%
filter(year == 2019) %>%
mutate(IR = 0.035,
PMT = MEDVAL * 0.8 * (IR / 12)/(1 - (1/(1 + IR/12)^360)),
QINC = PMT * 4 * 12,
HAI = (MEDINC / QINC) * 100) %>%
filter(HAI >= 0 & HAI <= 2000) %>%
arrange(desc(HAI))
merged.df %>%
filter(year == 2019) %>%
mutate(IR = 0.035,
PMT = MEDVAL * 0.8 * (IR / 12)/(1 - (1/(1 + IR/12)^360)),
QINC = PMT * 4 * 12,
HAI = (MEDINC / QINC) * 100) %>%
filter(HAI >= 0 & HAI <= 2000) %>%
arrange(desc(HAI)) %>% View()
merged.df %>%
filter(year == 2019) %>%
mutate(IR = 0.035,
PMT = MEDVAL * 0.8 * (IR / 12)/(1 - (1/(1 + IR/12)^360)),
QINC = PMT * 4 * 12,
HAI = (MEDINC / QINC) * 100) %>%
filter(HAI >= 0 & HAI <= 500) %>%
arrange(desc(HAI)) %>% View()
mhv <- data.frame(read.csv("https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/mhv.csv"))
# Compare GEOID and GeoName
# GEOID Filter:
mhv %>%
filter(GEOID == "310M100US10180")
#     X       GEOID           GeoName          MedianValue  MOE Year
# 1    4 310M100US10180 Abilene, TX Metro Area       83400 2009 2010
# 2  959 310M100US10180 Abilene, TX Metro Area       84800 1914 2011
# 3 1914 310M100US10180 Abilene, TX Metro Area       89300 2515 2012
# GeoName Filter:
mhv %>%
filter(GeoName == "Abilene, TX Metro Area")
#      X    GEOID                GeoName        MedianValue  MOE Year
# 1     4 310M100US10180 Abilene, TX Metro Area       83400 2009 2010
# 2   959 310M100US10180 Abilene, TX Metro Area       84800 1914 2011
# 3  1914 310M100US10180 Abilene, TX Metro Area       89300 2515 2012
# 4  2868 310M200US10180 Abilene, TX Metro Area       89000 2139 2013
# 5  3797 310M200US10180 Abilene, TX Metro Area       91900 2825 2014
# 6  4726 310M200US10180 Abilene, TX Metro Area       94000 2341 2015
# 7  5655 310M300US10180 Abilene, TX Metro Area       98200 1916 2016
# 8  6600 310M300US10180 Abilene, TX Metro Area      102000 2634 2017
# 9  7545 310M400US10180 Abilene, TX Metro Area      110100 3327 2018
# 10 8490 310M500US10180 Abilene, TX Metro Area      116100 2841 2019
# Results
# GEOID filter returns 3 total entries, all with exactly the same GEOID.
# GeoName returns 10 total entries, all with exactly the same GeoName
# Difference is GEOID reference changes middle value but not last 5 digits
# Last 5 digits of GEOID are equivalent to GEOFIPS
# Slice to extract the GEOFIPS from GEOID for Abilene, TX metro
geostring <- as.character(mhv$GEOID)
GeoFips <- str_extract(geostring, "\\d{5}$")
mhv$GeoFips <- GeoFips
View(mhv)
# Extraction
cainc1 <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/cainc1_msa_11yr.csv"))
cainc1 <- cainc1[4:nrow(cainc1),]
colnames(cainc1) <- cainc1[1,]
cainc1 <- cainc1[-1,]
# Tidying
minc <- cainc1 %>%
gather(year, value, -GeoFips,
-GeoName, -LineCode, -Description)
minc.personalincome <- subset(minc, LineCode==1)
minc.population <- subset(minc, LineCode==2)
minc.percapitaincome<- subset(minc, LineCode==3)
minc <- rbind(minc.personalincome, minc.population, minc.percapitaincome)
View(minc)
minc %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2019 & LineCode == 3) %>%
slice(-1)
minc %>%
filter(year == 2019 & LineCode == 3) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
slice(-1)
minc %>%
filter(year == 2019 & LineCode == 3) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
slice(-1) %>% View()
# Prepare for test Merge
df1 <- minc %>%
filter(year == 2019 & LineCode == 3) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2019)
# Test merge for 2019
merged.df.2019 <- merge(df1, df2, by = "GeoFips")
# Complete and functioning - for 2019
# 2018
df1 <- minc %>%
filter(year == 2018 & LineCode == 3) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2018)
merged.df.2018 <- merge(df1, df2, by = "GeoFips")
# 2017
df1 <- minc %>%
filter(year == 2017 & LineCode == 3) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2017)
merged.df.2017 <- merge(df1, df2, by = "GeoFips")
# 2016
df1 <- minc %>%
filter(year == 2016 & LineCode == 3) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2016)
merged.df.2016 <- merge(df1, df2, by = "GeoFips")
# 2015
df1 <- minc %>%
filter(year == 2015 & LineCode == 3) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2015)
merged.df.2015 <- merge(df1, df2, by = "GeoFips")
# 2014
df1 <- minc %>%
filter(year == 2014 & LineCode == 3) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2014)
merged.df.2014 <- merge(df1, df2, by = "GeoFips")
# 2013
df1 <- minc %>%
filter(year == 2013 & LineCode == 3) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2013)
merged.df.2013 <- merge(df1, df2, by = "GeoFips")
# 2012
df1 <- minc %>%
filter(year == 2012 & LineCode == 3) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2012)
merged.df.2012 <- merge(df1, df2, by = "GeoFips")
# 2011
df1 <- minc %>%
filter(year == 2011 & LineCode == 3) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2011)
merged.df.2011 <- merge(df1, df2, by = "GeoFips")
# 2010
df1 <- minc %>%
filter(year == 2010 & LineCode == 3) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
slice(-1)
df2 <- mhv %>%
rename(value = MedianValue,
year = Year) %>%
dplyr::select("GeoFips", "GeoName", "year", "value") %>%
filter(year == 2010)
merged.df.2010 <- merge(df1, df2, by = "GeoFips")
# Review Merges
merged.df <- rbind(merged.df.2019, merged.df.2018,
merged.df.2017, merged.df.2016,
merged.df.2015, merged.df.2014,
merged.df.2013, merged.df.2012,
merged.df.2011, merged.df.2010)
View(merged.df)
merged.df <- merged.df %>%
dplyr::select(-GeoName.y, -year.y)
colnames(merged.df) <- c("GeoFips",
"GeoName", "year", "MEDINC", "MEDVAL")
View(merged.df)
merged.df %>%
filter(year == 2019)
merged.df %>%
filter(year == 2019) %>% View()
merged.df %>%
filter(year == 2019) %>%
mutate(IR = 0.035,
PMT = MEDVAL * 0.8 * (IR / 12)/(1 - (1/(1 + IR/12)^360)),
QINC = PMT * 4 * 12,
HAI = (MEDINC / QINC) * 100) %>%
filter(HAI >= 0 & HAI <= 500) %>%
arrange(desc(HAI))
merged.df %>%
filter(year == 2019) %>%
mutate(IR = 0.035,
PMT = MEDVAL * 0.8 * (IR / 12)/(1 - (1/(1 + IR/12)^360)),
QINC = PMT * 4 * 12,
HAI = (MEDINC / QINC) * 100) %>%
filter(HAI >= 0 & HAI <= 500) %>%
arrange(desc(HAI)) %>% View()
# All metros 2010 through 2019
merged.df %>%
mutate(IR = 0.035,
PMT = MEDVAL * 0.8 * (IR / 12)/(1 - (1/(1 + IR/12)^360)),
QINC = PMT * 4 * 12,
HAI = (MEDINC / QINC) * 100) %>%
filter(HAI >= 0 & HAI <= 500) %>%
arrange(desc(HAI)) %>% View()
merged.df %>%
filter(year == 2019) %>%
mutate(IR = 0.035,
PMT = MEDVAL * 0.8 * (IR / 12)/(1 - (1/(1 + IR/12)^360)),
QINC = PMT * 4 * 12,
HAI = (MEDINC / QINC) * 100) %>%
filter(HAI >= 0 & HAI <= 500) %>%
arrange(desc(HAI)) %>% View()
# 384 Metros for 2019 Confirmed Reasonable HAI
merged.df %>%
filter(year == 2018) %>%
mutate(IR = 0.035,
PMT = MEDVAL * 0.8 * (IR / 12)/(1 - (1/(1 + IR/12)^360)),
QINC = PMT * 4 * 12,
HAI = (MEDINC / QINC) * 100) %>%
filter(HAI >= 0 & HAI <= 500) %>%
arrange(desc(HAI)) %>% View()
shiny::runApp('~/GitHub/msds/608/Mod3/Mod3')
updateR()
library(installr)
install.packages("installr")
installr::updateR()
runApp('~/GitHub/msds/608/Mod3/Mod3/Mod3.R')
runApp('~/GitHub/msds/608/Mod3/Mod3/Mod3.R')
