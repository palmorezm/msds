knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(maps)
# Income, Population, & Per Capita Income by MSA from 1969
# Extraction
cainc1 <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/CAINC1__ALL_AREAS_1969_2019.csv"))
l1 <- colnames(cainc1[1:8])
l2 <- seq(1969, 2019, 1)
l3 <- c(l1, l2)
colnames(cainc1) <- l3
# Tidying
mcainc1 <- cainc1 %>%
gather(year, value,
-GeoFIPS, -GeoName, -Region, -TableName, -LineCode,
-IndustryClassification, -Description, -Unit)
cainc1.personalincome <- subset(cainc1, LineCode==1)
cainc1.population <- subset(cainc1, LineCode==2)
cainc1.percapitaincome<- subset(cainc1, LineCode==3)
cainc1 <- rbind(cainc1.personalincome, cainc1.population, cainc1.percapitaincome)
View(mcainc1)
# Cleaning
# Determine the presence of and deal with missing Values
# sum(is.na(mcainc1)) # 153 - recheck for assurance
# which(is.na(mcainc1))
# mcainc1[which(is.na(mcainc1)),] # Displays all NA's (if there are any)
# Missing values in this data are direct from BEA
# Review each subset before omission/imputation
# sum(is.na(cainc1.percapitaincome)) # 1 Missing
# which(is.na(cainc1.percapitaincome)) # At 6397
# cainc1.percapitaincome[6397,] # All missing
# which(is.na(cainc1.personalincome)) # At 6397
# cainc1.personalincome[6397,] # All missing
# which(is.na(cainc1.population)) # At 6397
# cainc1.population[6397,] # Ditto as above
# The one missing entry from the data created 153 missing entries when gathered
mcainc1 <- na.omit(mcainc1)
sum(is.na(mcainc1)) # 0
# However, omission removed more than expected
# count(mcainc1) - 153 # Expected 153 removals
# sum(is.na(mcainc1)) # The value has changed.
# Solution: During rerun update notes!
# Regional Price Parities by MSA from 2008 - 2019
# Extraction
rpp <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/rpp_msa_11yr.csv"))
rpp <- rpp[4:nrow(rpp),]
colnames(rpp) <- rpp[1,]
rpp <- rpp[-1,]
# Tidying
mrpp <- rpp %>%
gather(key, value, -GeoFips, -GeoName, -LineCode, -Description)
rpp.allitems <- subset(mrpp, LineCode==1)
rpp.goods <- subset(mrpp, LineCode==2)
rpp.rents <- subset(mrpp, LineCode==3)
rpp.services <- subset(mrpp, LineCode==4)
mrpp <- rbind(rpp.allitems, rpp.goods, rpp.rents, rpp.services)
View(mrpp)
# Determine the presence of and deal with missing Values
sum(is.na(mrpp)) # 28
which(is.na(mrpp))
mrpp[which(is.na(mrpp)),] # Displays all NA's (if there are any)
# There are no missing values in this data set
# Rename GeoFIPS to GeoFips for binding
mcainc1 <- mcainc1 %>%
rename(GeoFips = GeoFIPS)
# Convert, rename, and adjust selection
mrpp <- mrpp %>%
rename(year = key) %>%
mutate(LineCode2 = as.numeric(LineCode) + 10) %>%
dplyr::select(-LineCode) %>%
rename(LineCode = LineCode2) %>%
dplyr::select(GeoFips, GeoName, LineCode,
Description, year, value)
# Repeat selection method on mcainc1
mcainc1 <- mcainc1 %>%
dplyr::select(GeoFips, GeoName, LineCode,
Description, year, value)
# Create combined data frame
df <- rbind(mcainc1, mrpp) %>%
mutate(Year = as.numeric(year),
Value = as.numeric(value)) %>%
dplyr::select(-year, -value)
df_pop_county <- data.frame(region=df$GeoFips)
df_pop_county$value <- df$GeoFips
y <- df_pop_county$value
df_pop_county$color <- gray(y / max(y))
df
df %>%
arrange(LineCode)
df %>%
arrange(unique(LineCode))
unique(df$LineCode)
df %>%
arrange(unique($LineCode))
df %>%
arrange(df$LineCode) %>%
filter(LineCode == 3 & LineCode == 11)
df %>%
arrange(unique(df$LineCode)) %>%
filter(LineCode == 3 & LineCode == 11)
df %>%
filter(LineCode == 3 & LineCode == 11)
df %>%
filter(LineCode == 3 & LineCode == 11)
df %>%
filter(LineCode == 3 & LineCode == 12)
df %>%
filter(LineCode == 3 & LineCode == 8)
df %>%
filter(LineCode == 3 & LineCode == 2)
df %>%
filter(LineCode == 3 & LineCode == 2)
df %>%
filter(LineCode == 3)
df %>%
filter(LineCode == 3, LineCode==11)
df %>%
filter(LineCode == 3 & 11)
utate(percapita =
df %>%
mutate(percapita = filter(LineCode == 3))
df %>%
cainc1.percapitaincome
df
# Rename GeoFIPS to GeoFips for binding
mcainc1 <- mcainc1 %>%
rename(GeoFips = GeoFIPS)
# Income, Population, & Per Capita Income by MSA from 1969
# Extraction
cainc1 <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/CAINC1__ALL_AREAS_1969_2019.csv"))
l1 <- colnames(cainc1[1:8])
l2 <- seq(1969, 2019, 1)
l3 <- c(l1, l2)
colnames(cainc1) <- l3
# Tidying
mcainc1 <- cainc1 %>%
gather(year, value,
-GeoFIPS, -GeoName, -Region, -TableName, -LineCode,
-IndustryClassification, -Description, -Unit)
cainc1.personalincome <- subset(cainc1, LineCode==1)
cainc1.population <- subset(cainc1, LineCode==2)
cainc1.percapitaincome<- subset(cainc1, LineCode==3)
cainc1 <- rbind(cainc1.personalincome, cainc1.population, cainc1.percapitaincome)
View(mcainc1)
# Cleaning
# Determine the presence of and deal with missing Values
# sum(is.na(mcainc1)) # 153 - recheck for assurance
# which(is.na(mcainc1))
# mcainc1[which(is.na(mcainc1)),] # Displays all NA's (if there are any)
# Missing values in this data are direct from BEA
# Review each subset before omission/imputation
# sum(is.na(cainc1.percapitaincome)) # 1 Missing
# which(is.na(cainc1.percapitaincome)) # At 6397
# cainc1.percapitaincome[6397,] # All missing
# which(is.na(cainc1.personalincome)) # At 6397
# cainc1.personalincome[6397,] # All missing
# which(is.na(cainc1.population)) # At 6397
# cainc1.population[6397,] # Ditto as above
# The one missing entry from the data created 153 missing entries when gathered
mcainc1 <- na.omit(mcainc1)
sum(is.na(mcainc1)) # 0
# However, omission removed more than expected
# count(mcainc1) - 153 # Expected 153 removals
# sum(is.na(mcainc1)) # The value has changed.
# Solution: During rerun update notes!
# Regional Price Parities by MSA from 2008 - 2019
# Extraction
rpp <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/rpp_msa_11yr.csv"))
rpp <- rpp[4:nrow(rpp),]
colnames(rpp) <- rpp[1,]
rpp <- rpp[-1,]
# Tidying
mrpp <- rpp %>%
gather(key, value, -GeoFips, -GeoName, -LineCode, -Description)
rpp.allitems <- subset(mrpp, LineCode==1)
rpp.goods <- subset(mrpp, LineCode==2)
rpp.rents <- subset(mrpp, LineCode==3)
rpp.services <- subset(mrpp, LineCode==4)
mrpp <- rbind(rpp.allitems, rpp.goods, rpp.rents, rpp.services)
View(mrpp)
# Determine the presence of and deal with missing Values
sum(is.na(mrpp)) # 28
which(is.na(mrpp))
mrpp[which(is.na(mrpp)),] # Displays all NA's (if there are any)
# There are no missing values in this data set
# Rename GeoFIPS to GeoFips for binding
mcainc1 <- mcainc1 %>%
rename(GeoFips = GeoFIPS)
# Convert, rename, and adjust selection
mrpp <- mrpp %>%
rename(year = key) %>%
mutate(LineCode2 = as.numeric(LineCode) + 10) %>%
dplyr::select(-LineCode) %>%
rename(LineCode = LineCode2) %>%
dplyr::select(GeoFips, GeoName, LineCode,
Description, year, value)
# Repeat selection method on mcainc1
mcainc1 <- mcainc1 %>%
dplyr::select(GeoFips, GeoName, LineCode,
Description, year, value)
# Create combined data frame
df <- rbind(mcainc1, mrpp) %>%
mutate(Year = as.numeric(year),
Value = as.numeric(value)) %>%
dplyr::select(-year, -value)
View(df)
df.test <- df %>%
filter(LineCode == "11" & Year == "2008") %>%
mutate(Color = scale(Value) + 100) %>%
slice(-1, -2)
map("county", fill = T, col = df.test$Color[,1])
df %>%
filter(LineCode == "11" & Year == "2008")
col <- df %>%
filter(LineCode == "11" & Year == "2008")
df %>%
filter(LineCode == "11" & Year == "2008") %>%
filter(LineCode == "3" & Year == "2008")
df %>%
filter(LineCode == "3" & Year == "2008")
df %>%
filter(LineCode == "11" & Year == "2008")
dict <- df %>%
filter(LineCode == "11" & Year == "2008")
df[dict$GeoFips]
df[[dict$GeoFips]]
which(dict$GeoFips)
dict$GeoFips
data <- df %>%
filter(LineCode == "3" & Year == "2008")
data$GeoFips
data$GeoFips == dict$GeoFips
df
df %>%
mutate(PerCap = filter(LineCode == 3))
df %>%
mutate(PerCap = data$Value)
View(cainc1.percapitaincome)
View(rpp.allitems)
library(tidyverse)
library(maps)
library(tidyverse)
library(maps)
# Income, Population, & Per Capita Income by County from 1969 to 2019
# Extraction
cainc1 <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/CAINC1__ALL_AREAS_1969_2019.csv"))
l1 <- colnames(cainc1[1:8])
l2 <- seq(1969, 2019, 1)
l3 <- c(l1, l2)
colnames(cainc1) <- l3
# Tidying
mcainc1 <- cainc1 %>%
gather(year, value,
-GeoFIPS, -GeoName, -Region, -TableName, -LineCode,
-IndustryClassification, -Description, -Unit)
cainc1.personalincome <- subset(cainc1, LineCode==1)
cainc1.population <- subset(cainc1, LineCode==2)
cainc1.percapitaincome<- subset(cainc1, LineCode==3)
cainc1 <- rbind(cainc1.personalincome, cainc1.population, cainc1.percapitaincome)
View(mcainc1)
# Cleaning
# Determine the presence of and deal with missing Values
# sum(is.na(mcainc1)) # 153 - recheck for assurance
# which(is.na(mcainc1))
# mcainc1[which(is.na(mcainc1)),] # Displays all NA's (if there are any)
# Missing values in this data are direct from BEA
# Review each subset before omission/imputation
# sum(is.na(cainc1.percapitaincome)) # 1 Missing
# which(is.na(cainc1.percapitaincome)) # At 6397
# cainc1.percapitaincome[6397,] # All missing
# which(is.na(cainc1.personalincome)) # At 6397
# cainc1.personalincome[6397,] # All missing
# which(is.na(cainc1.population)) # At 6397
# cainc1.population[6397,] # Ditto as above
# The one missing entry from the data created 153 missing entries when gathered
mcainc1 <- na.omit(mcainc1)
sum(is.na(mcainc1)) # 0
# However, omission removed more than expected
# count(mcainc1) - 153 # Expected 153 removals
# sum(is.na(mcainc1)) # The value has changed.
# Solution: During rerun update notes!
# Regional Price Parities by MSA from 2008 - 2019
# Extraction
rpp <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/rpp_msa_11yr.csv"))
rpp <- rpp[4:nrow(rpp),]
colnames(rpp) <- rpp[1,]
rpp <- rpp[-1,]
# Tidying
mrpp <- rpp %>%
gather(key, value, -GeoFips, -GeoName, -LineCode, -Description)
rpp.allitems <- subset(mrpp, LineCode==1)
rpp.goods <- subset(mrpp, LineCode==2)
rpp.rents <- subset(mrpp, LineCode==3)
rpp.services <- subset(mrpp, LineCode==4)
mrpp <- rbind(rpp.allitems, rpp.goods, rpp.rents, rpp.services)
View(mrpp)
# Determine the presence of and deal with missing Values
sum(is.na(mrpp)) # 28
which(is.na(mrpp))
mrpp[which(is.na(mrpp)),] # Displays all NA's (if there are any)
# There are no missing values in this data set
# Income, Population, & Per Capita Income by County from 1969 to 2019
# Extraction
cainc1 <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/CAINC1__ALL_AREAS_1969_2019.csv"))
l1 <- colnames(cainc1[1:8])
l2 <- seq(1969, 2019, 1)
l3 <- c(l1, l2)
colnames(cainc1) <- l3
# Tidying
mcainc1 <- cainc1 %>%
gather(year, value,
-GeoFIPS, -GeoName, -Region, -TableName, -LineCode,
-IndustryClassification, -Description, -Unit)
cainc1.personalincome <- subset(cainc1, LineCode==1)
cainc1.population <- subset(cainc1, LineCode==2)
cainc1.percapitaincome<- subset(cainc1, LineCode==3)
cainc1 <- rbind(cainc1.personalincome, cainc1.population, cainc1.percapitaincome)
View(mcainc1)
# Cleaning
# Determine the presence of and deal with missing Values
# sum(is.na(mcainc1)) # 153 - recheck for assurance
# which(is.na(mcainc1))
# mcainc1[which(is.na(mcainc1)),] # Displays all NA's (if there are any)
# Missing values in this data are direct from BEA
# Review each subset before omission/imputation
# sum(is.na(cainc1.percapitaincome)) # 1 Missing
# which(is.na(cainc1.percapitaincome)) # At 6397
# cainc1.percapitaincome[6397,] # All missing
# which(is.na(cainc1.personalincome)) # At 6397
# cainc1.personalincome[6397,] # All missing
# which(is.na(cainc1.population)) # At 6397
# cainc1.population[6397,] # Ditto as above
# The one missing entry from the data created 153 missing entries when gathered
mcainc1 <- na.omit(mcainc1)
sum(is.na(mcainc1)) # 0
# However, omission removed more than expected
# count(mcainc1) - 153 # Expected 153 removals
# sum(is.na(mcainc1)) # The value has changed.
# Solution: During rerun update notes!
# Regional Price Parities by MSA from 2008 - 2019
# Extraction
rpp <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/rpp_msa_11yr.csv"))
rpp <- rpp[4:nrow(rpp),]
colnames(rpp) <- rpp[1,]
rpp <- rpp[-1,]
# Tidying
mrpp <- rpp %>%
gather(key, value, -GeoFips, -GeoName, -LineCode, -Description)
rpp.allitems <- subset(mrpp, LineCode==1)
rpp.goods <- subset(mrpp, LineCode==2)
rpp.rents <- subset(mrpp, LineCode==3)
rpp.services <- subset(mrpp, LineCode==4)
mrpp <- rbind(rpp.allitems, rpp.goods, rpp.rents, rpp.services)
View(mrpp)
# Determine the presence of and deal with missing Values
sum(is.na(mrpp)) # 0
which(is.na(mrpp))
mrpp[which(is.na(mrpp)),] # Displays all NA's (if there are any)
# There are no missing values in this data set
# Income, Population, & Per Capita Income by MSA from 2008 to 2019
# Extraction
cainc1 <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/cainc1_msa_11yr.csv"))
cainc1 <- cainc1[4:nrow(cainc1),]
colnames(cainc1) <- cainc1[1,]
cainc1 <- cainc1[-1,]
# Tidying
minc <- cainc1 %>%
gather(year, value, -GeoFips,
-GeoName, -LineCode, -Description)
minc.personalincome <- subset(minc, LineCode==1)
minc.population <- subset(minc, LineCode==2)
minc.percapitaincome<- subset(minc, LineCode==3)
minc <- rbind(minc.personalincome, minc.population, minc.percapitaincome)
View(minc)
# Cleaning
# Determine the presence of and deal with missing Values
sum(is.na(minc)) # 0
which(is.na(minc))
minc[which(is.na(minc)),] # None are missing
minc[6:nrow(minc),] %>%
filter(LineCode == 3)
mrpp  %>%
slice(-1,-2) %>%
filter(LineCode == 1)
merged <- merge(minc, mrpp, by = "GeoFips")
merged[c("LineCode.x","year","LineCode.y","key","value.y")]
merged[c("LineCode.x","year","LineCode.y","key","value.y")] <- sapply(merged[c("LineCode.x","year","LineCode.y","key","value.y")], as.numeric)
merged %>%
filter(LineCode.x == 3) %>%
mutate(RelAf = (value.x / value.y)/1000) %>%
filter(LineCode.y == 1) %>%
arrange(desc(RelAf)) %>%
filter(year == 2019 & key == 2019)
merged %>%
filter(LineCode.x == 3) %>%
mutate(RelAf = (value.x / value.y)/1000) %>%
filter(LineCode.y == 1) %>%
arrange(desc(RelAf)) %>%
filter(year == 2019 & key == 2019)
merged %>%
filter(LineCode.x == 3) %>%
mutate(RelAf = (value.x / value.y)/1000) %>%
filter(LineCode.y == 1) %>%
arrange(desc(RelAf)) %>%
filter(year == 2019 & key == 2019)
merged %>%
filter(LineCode.x == 3) %>%
mutate(RelAf = (value.x / value.y)/1000) %>%
filter(LineCode.y == 1) %>%
arrange(desc(RelAf)) %>%
filter(year == 2019 & key == 2019)
RelAf_tbl <- merged %>%
filter(LineCode.x == 3) %>%
mutate(RelAf = (value.x / value.y)/1000) %>%
filter(LineCode.y == 1) %>%
arrange(desc(RelAf)) %>%
filter(year == 2019 & key == 2019)
write(RelAf_tbl, file = "C:/Downloads"/RelAf_tbl.csv)
write.csv(RelAf_tbl, file = "C:/Downloads"/RelAf_tbl.csv)
write.csv(RelAf_tbl, file = "C:/Downloads/RelAf_tbl.csv")
write.csv(RelAf_tbl, file = "C:/Users/Owner/Documents/Data/RelAf_tbl.csv")
RelAf_tbl2 <- merged %>%
filter(LineCode.x == 3) %>%
mutate(RelAf = (value.x / value.y)/1000) %>%
filter(LineCode.y == 1) %>%
arrange(desc(RelAf)) %>%
filter(year == 2018 & key == 2018)
write.csv(RelAf_tbl, file = "C:/Users/Owner/Documents/Data/RelAf_tbl2.csv")
RelAf_tbl3 <- merged %>%
filter(LineCode.x == 3) %>%
mutate(RelAf = (value.x / value.y)/1000) %>%
filter(LineCode.y == 1) %>%
arrange(desc(RelAf)) %>%
filter(year == 2017 & key == 2017)
write.csv(RelAf_tbl, file = "C:/Users/Owner/Documents/Data/RelAf_tbl3.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# Income, Population, & Per Capita Income by County from 1969 to 2019
# Extraction
cainc1 <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/CAINC1__ALL_AREAS_1969_2019.csv"))
l1 <- colnames(cainc1[1:8])
l2 <- seq(1969, 2019, 1)
l3 <- c(l1, l2)
colnames(cainc1) <- l3
# Tidying
mcainc1 <- cainc1 %>%
gather(year, value,
-GeoFIPS, -GeoName, -Region, -TableName, -LineCode,
-IndustryClassification, -Description, -Unit)
cainc1.personalincome <- subset(cainc1, LineCode==1)
cainc1.population <- subset(cainc1, LineCode==2)
cainc1.percapitaincome<- subset(cainc1, LineCode==3)
cainc1 <- rbind(cainc1.personalincome, cainc1.population, cainc1.percapitaincome)
View(mcainc1)
# Cleaning
# Determine the presence of and deal with missing Values
# sum(is.na(mcainc1)) # 153 - recheck for assurance
# which(is.na(mcainc1))
# mcainc1[which(is.na(mcainc1)),] # Displays all NA's (if there are any)
# Missing values in this data are direct from BEA
# Review each subset before omission/imputation
# sum(is.na(cainc1.percapitaincome)) # 1 Missing
# which(is.na(cainc1.percapitaincome)) # At 6397
# cainc1.percapitaincome[6397,] # All missing
# which(is.na(cainc1.personalincome)) # At 6397
# cainc1.personalincome[6397,] # All missing
# which(is.na(cainc1.population)) # At 6397
# cainc1.population[6397,] # Ditto as above
# The one missing entry from the data created 153 missing entries when gathered
mcainc1 <- na.omit(mcainc1)
sum(is.na(mcainc1)) # 0
# However, omission removed more than expected
# count(mcainc1) - 153 # Expected 153 removals
# sum(is.na(mcainc1)) # The value has changed.
# Solution: During rerun update notes!
# Regional Price Parities by MSA from 2008 - 2019
# Extraction
rpp <- data.frame(read.csv(
"https://raw.githubusercontent.com/palmorezm/msds/main/698/Data/rpp_msa_11yr.csv"))
rpp <- rpp[4:nrow(rpp),]
colnames(rpp) <- rpp[1,]
rpp <- rpp[-1,]
# Tidying
mrpp <- rpp %>%
gather(key, value, -GeoFips, -GeoName, -LineCode, -Description)
rpp.allitems <- subset(mrpp, LineCode==1)
rpp.goods <- subset(mrpp, LineCode==2)
rpp.rents <- subset(mrpp, LineCode==3)
rpp.services <- subset(mrpp, LineCode==4)
mrpp <- rbind(rpp.allitems, rpp.goods, rpp.rents, rpp.services)
View(mrpp)
# Determine the presence of and deal with missing Values
sum(is.na(mrpp)) # 0
which(is.na(mrpp))
mrpp[which(is.na(mrpp)),] # Displays all NA's (if there are any)
# There are no missing values in this data set
