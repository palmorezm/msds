AW_ratio
# Probability of delay for airline Alaska
AK_ratio <- sampleflights[2,8] / sampleflights[1,8]
# Probability of delay for airline AW West
AW_ratio <- sampleflights[4,8] / sampleflights[3,8]
signif(AK_ratio, digits = 3)
signif(AW_ratio, digits = 3)
summary(sampleflights)
min(sampleflights)
min(sampleflights[3:7])
# Results indicate 12 as the minimum flight
which(sampleflights %in% min_flight)
min_flight <- min(sampleflights[3:7])
# Results indicate 12 as the minimum flight
which(sampleflights %in% min_flight)
min_flight <- min(sampleflights[3:7])
# Results indicate 12 as the minimum flight
which(sampleflights %in% c(min_flight))
# Then, this finds the index value of the minimum flight
which(sampleflights %in% c(min_flight))
# Results should indicate 12 as the minimum flight
min_flight <- min(sampleflights[3:7])
# Then, this finds the index value of the minimum flight
which(sampleflights[3:7] %in% c(min_flight))
# And this displays it with the location
# Results should indicate 12 as the minimum flight
min_flight <- min(sampleflights[3:7])
# Then, this finds the index value of the minimum flight
which(sampleflights %in% min_flight)
# And this displays it with the location
# Results should indicate 12 as the minimum flight
min_flight <- min(sampleflights[3:7])
# Then, this finds the index value of the minimum flight
which(sampleflights == min_flight)
# And this displays it with the location
# And this displays it with the location
sampleflights[index_minflight]
# And this displays it with the location
sampleflights[,14]
# Results should indicate 12 as the minimum flight
min_flight <- min(sampleflights[3:7])
# Then, this finds the index value of the minimum flight
row_minflight <- which(sampleflights == min_flight)
# And this displays it with the location
sampleflights[match(row_minflight, sampleflights),]
#####
# Repeat for the maximum flight in the same range
sampleflights
sampleflights
# And this displays it with the location
sampleflights[match(min_flight, sampleflights),]
sampleflights[match(row_minflight, sampleflights[3:7]),]
# Results should indicate 12 as the minimum flight
min_flight <- min(sampleflights[3:7])
# Then, this finds the index value of the minimum flight
row_minflight <- which(sampleflights == min_flight)
# And this displays it with the location
sampleflights[match(min_flight, sampleflights),]
sampleflights[match(row_minflight, sampleflights[3:7]),]
#####
# Repeat for the maximum flight in the same range
sampleflights[match(12, sampleflights),]
sampleflights[match(14, sampleflights),]
sampleflights[match(14, sampleflights[3:7]),]
sampleflights[match(14, sampleflights$Phoenix),]
sampleflights[14]
sampleflights[14,]
sampleflights[0,14]
sampleflights[2,5]
sampleflights[2,4]
apply(sampleflights, 1, FUN = min)
?apply
# Applying the minimum function over the rows (i.e. the margin 1)
apply(sampleflights, 1, FUN=min)
# then storing results in a new column
sampleflight$Minima <- apply(sampleflights, 1, FUN = min)
# Applying the minimum function over the rows (i.e. the margin 1)
apply(sampleflights, 1, FUN=min)
# then storing results in a new column
sampleflights$Minima <- apply(sampleflights, 1, FUN = min)
# Repeat the same function application for the maximum of the flights
apply(sampleflights, 1, FUN=max)
sampleflights$Maxima <- apply(sampleflights, 1, FUN = min)
# Applying the minimum function over the rows (by using the margin of 1) in the data frame
# then storing results in a new column called "Minima"
sampleflights$Minima <- apply(sampleflights, 1, FUN = min)
# Repeat the same function for the maximum of flights and calling the column "Maxima"
sampleflights$Maxima <- apply(sampleflights, 1, FUN = max)
sampleflights
# Applying the minimum function over the rows (by using the margin of 1) in the data frame
# then storing results in a new column called "Minima"
sampleflights$Minima <- apply(sampleflights, 1, FUN = min)
# Repeat the same function for the maximum of flights and calling the column "Maxima"
sampleflights$Maxima <- apply(sampleflights[,3:7], 1, FUN = max)
sampleflights
# Applying the minimum function over the rows (by using the margin of 1) in the data frame
# then storing results in a new column called "Minima"
sampleflights$Minima <- apply(sampleflights[3:7], 1, FUN = min)
# Repeat the same function for the maximum of flights and calling the column "Maxima"
sampleflights$Maxima <- apply(sampleflights[,3:7], 1, FUN = max)
sampleflights
# Applying the minimum function over the rows (by using the margin of 1) in the data frame
# then storing results in a new column called "Minima"
sampleflights$Minima <- apply(sampleflights[3:7], 1, FUN = min)
# Repeat the same function for the maximum of flights and calling the column "Maxima"
sampleflights$Maxima <- apply(sampleflights[,3:7], 1, FUN = max)
sampleflights[2,4]
sampleflights[2,]
sampleflights[2,1|2|4 ]
sampleflights[2,c(1|2|4)]
sampleflights[2,c(1:4)]
sampleflights[2,c(1|2)]
sampleflights[2,c(1,2,4)]
sampleflights
# Selecting the variables to display the maximum flight, its status and the airline
sampleflights[4,c(1,2,4)]
# Selecting the variables to display the maximum flight, its status and the airline
sampleflights[3,c(1,2,4)]
# Applying the minimum function over the rows (by using the margin of 1) in the data frame
# then storing results in a new column called "Minima"
sampleflights$Minima <- apply(sampleflights[3:7], 1, FUN = min)
# Repeat the same function for the maximum of flights and calling the column "Maxima"
sampleflights$Maxima <- apply(sampleflights[,3:7], 1, FUN = max)
# Selecting the variables to display the minimum flight, its status and the airline
sampleflights[2,c(1,2,4)]
# Selecting the variables to display the maximum flight, its status and the airline
sampleflights[3,c(1,2,4)]
# Applying the minimum function over the rows (by using the margin of 1) in the data frame
# then storing results in a new column called "Minima"
sampleflights$Minima <- apply(sampleflights[3:7], 1, FUN = min)
# Repeat the same function for the maximum of flights and calling the column "Maxima"
sampleflights$Maxima <- apply(sampleflights[,3:7], 1, FUN = max)
# Selecting the variables to display the minimum flight, its status and the airline
sampleflights[2,c(1,2,4)]
# Selecting the variables to display the maximum flight, its status and the airline
sampleflights[3,c(1,2,4)] |sampleflights[2,c(1,2,4)]
# Applying the minimum function over the rows (by using the margin of 1) in the data frame
# then storing results in a new column called "Minima"
sampleflights$Minima <- apply(sampleflights[3:7], 1, FUN = min)
# Selecting the variables to display the minimum flight, its status and the airline
sampleflights[2,c(1,2,4)]
library(reshape2)
someflights <- melt(sampleflights)
View(someflights)
delays <- someflights %>%
filter(Status == "delayed")
View(delays)
delays[1:10,]
# plotting delays for each location
ggplot(data = delays, aed(x = variable)) +
geom_bar()
# plotting delays for each location
ggplot(data = delays, aes(x = variable)) +
geom_bar()
# Create a new data frame with columns for plotting in ggplot
someflights <- melt(sampleflights)
delays <- someflights %>%
filter(Status == "delayed")
# drop the statitics that are not needed by selecting what is
delays <- delays[1:10,]
# plotting delays for each location
ggplot(data = delays, aes(x = variable)) +
geom_bar()
barplot(delays)
hist(delays)
hist(delays$variable)
hist(delays$value)
# plotting delays for each location
ggplot(data = delays, aes(x = value)) +
geom_bar()
# Create a new data frame with columns for plotting in ggplot
someflights <- melt(sampleflights)
delays <- someflights %>%
filter(Status == "delayed")
# drop the statitics that are not needed by selecting what is
delays <- delays[1:10,]
# Creating a data frame with delays for Alaska
AK_delays <- someflights %>%
filter(Airline == "Alaska")
# Creating a data frame with delays for AW West
AW_delays <- someflights %>%
filter(Airline == "AW West")
# plotting delays for each location
View(AK_delays)
# Create a new data frame with columns for plotting in ggplot
someflights <- melt(sampleflights)
delays <- someflights %>%
filter(Status == "delayed")
# drop the statitics that are not needed by selecting what is
delays <- delays[1:10,]
# Creating a data frame with delays for Alaska
AK_delays <- delays %>%
filter(Airline == "Alaska")
# Creating a data frame with delays for AW West
AW_delays <- delays %>%
filter(Airline == "AW West")
# plotting delays for each location
View(AK_delays)
View(AW_delays)
# Create a new data frame with columns for plotting in ggplot
someflights <- melt(sampleflights)
delays <- someflights %>%
filter(Status == "delayed")
# drop the statitics that are not needed by selecting what is
delays <- delays[1:10,]
# Creating a data frame with delays for Alaska
AK_delays <- delays %>%
filter(Airline == "Alaska")
# Creating a data frame with delays for AW West
AW_delays <- delays %>%
filter(Airline == "AW West")
# plotting delays for each location
# plotting delays for each location
ggplot(data = AK_delays aes(x = variables, y = values)) + geom_bar()
# plotting delays for each location
ggplot(data = AK_delays, aes(x = variables, y = values)) + geom_bar()
# plotting delays for each location
ggplot(data = AK_delays, aes(x = variable, y = values)) + geom_bar()
# plotting delays for each location
ggplot(data = AK_delays, aes(x = variable, y = value)) + geom_bar()
# plotting delays for each location
ggplot(data = AK_delays, aes(y = value)) + geom_bar()
# plotting delays for each location
AK_delays
# Create a new data frame with columns for plotting in ggplot
someflights <- melt(sampleflights)
delays <- someflights %>%
filter(Status == "delayed")
# drop the statitics that are not needed by selecting what is
delays <- delays[1:10,]
# Creating a data frame with delays for Alaska
AK_delays <- delays %>%
filter(Airline == "Alaska")
# Creating a data frame with delays for AW West
AW_delays <- delays %>%
filter(Airline == "AW West")
# plotting delays for each location
ggplot(data = AK_delays, aes(y = value)) + geom_bar()
# Create a new data frame with columns for plotting in ggplot
someflights <- melt(sampleflights)
delays <- someflights %>%
filter(Status == "delayed")
# drop the statitics that are not needed by selecting what is
delays <- delays[1:10,]
# Creating a data frame with delays for Alaska
AK_delays <- delays %>%
filter(Airline == "Alaska")
# Creating a data frame with delays for AW West
AW_delays <- delays %>%
filter(Airline == "AW West")
# Creating a data frame with delays for AW West
AW_delays <- delays %>%
filter(Airline == "AM West")
# plotting delays for each location
barplot(AK_delays$value)
barplot(AM_delays$Value)
# Create a new data frame with columns for plotting in ggplot
someflights <- melt(sampleflights)
delays <- someflights %>%
filter(Status == "delayed")
# drop the statitics that are not needed by selecting what is
delays <- delays[1:10,]
# Creating a data frame with delays for Alaska
AK_delays <- delays %>%
filter(Airline == "Alaska")
# Creating a data frame with delays for AW West
AM_delays <- delays %>%
filter(Airline == "AM West")
# plotting delays for each location
barplot(AK_delays$value)
barplot(AM_delays$Value)
barplot(AM_delays$Value)
barplot(AM_delays$value)
barplot(AM_delays$value, horiz = TRUE)
# plotting delays for each location
barplot(AK_delays$value, horiz = TRUE )
# plotting delays for each location
barplot(AK_delays$value, horiz = TRUE, names.arg = AK_delays$variable)
ggplot(data = AK_delays, aes(y = value))
ggplot(data = AK_delays, aes(y = value)) +geom_bar()
ggplot(data = AK_delays, aes(x = value)) +geom_bar()
# plotting delays for each location
barplot(AK_delays$value, horiz = TRUE, names.arg = AK_delays$variable)
# plotting delays for each location
barplot(AK_delays$value, horiz = FALSE, names.arg = AK_delays$variable)
barplot(AM_delays$value, horiz = FALSE, names.arg = AM_delays$variable, main = "AM West Airline Delays")
barplot(AM_delays$value, horiz = FALSE, names.arg = AM_delays$variable, main = "AM West Airline Delays")
# plotting delays for each location
barplot(AK_delays$value, horiz = FALSE, names.arg = AK_delays$variable, main = "Alaska Airline Delays")
# plotting delays for each location
barplot(AK_delays$value, horiz = FALSE, names.arg = AK_delays$variable, main = "Alaska Airline Delays", sub = "For Selected Arrival Destinations")
barplot(AM_delays$value, horiz = FALSE, names.arg = AM_delays$variable, main = "AM West Airline Delays", sub = "For Selected Arrival Destinations")
# plotting delays for each location
barplot(AK_delays$value, horiz = FALSE, names.arg = AK_delays$variable, main = "Alaska Airline Delays", sub = "For Selected Arrival Destinations")
# plotting delays for each location
barplot(AK_delays$value, horiz = FALSE, names.arg = AK_delays$variable, main = "Alaska Airline Delays", sub = "For Selected Arrival Destinations", col = AK_delays$variable)
barplot(AM_delays$value, horiz = FALSE, names.arg = AM_delays$variable, main = "AM West Airline Delays", sub = "For Selected Arrival Destinations", col = AM_delays$variable)
# plotting delays for each location
barplot(AK_delays$value, horiz = FALSE, names.arg = AK_delays$variable, main = "Alaska Airline Delays", sub = "For Selected Arrival Destinations", col = AK_delays$variable)
barplot(AM_delays$value, horiz = FALSE, names.arg = AM_delays$variable, main = "AM West Airline Delays", sub = "For Selected Arrival Destinations", col = AM_delays$variable)
# plotting delays for each location
barplot(AK_delays$value, horiz = FALSE, names.arg = AK_delays$variable, main = "Alaska Airline Delays", sub = "For Selected Arrival Destinations", col = AK_delays$variable)
barplot(AM_delays$value, horiz = FALSE, names.arg = AM_delays$variable, main = "AM West Airline Delays", sub = "For Selected Arrival Destinations", col = AM_delays$variable)
# plotting delays for each location
barplot(AK_delays$value, horiz = TRUE, names.arg = AK_delays$variable, main = "Alaska Airline Delays", sub = "For Selected Arrival Destinations", col = AK_delays$variable)
barplot(AM_delays$value, horiz = TRUE, names.arg = AM_delays$variable, main = "AM West Airline Delays", sub = "For Selected Arrival Destinations", col = AM_delays$variable)
# Repeat the same function for the maximum of flights and calling the column "Maxima"
sampleflights$Maxima <- apply(sampleflights[,3:7], 1, FUN = max)
# Selecting the variables to display the maximum flight, its status and the airline
sampleflights[3,c(1,2,4)]
# Probability of delay for airline Alaska
AK_ratio <- sampleflights[2,8] / sampleflights[1,8]
# Probability of delay for airline AM West
AM_ratio <- sampleflights[4,8] / sampleflights[3,8]
# Rounding AK_ratio to the correct number of significant figures, 3
PAK <- signif(AK_ratio, digits = 3)
# Rounding AK_ratio to the correct number of significant figures, 3
PAW <- signif(AW_ratio, digits = 3)
# Probability of delay for airline Alaska
AK_ratio <- sampleflights[2,8] / sampleflights[1,8]
# Probability of delay for airline AM West
AM_ratio <- sampleflights[4,8] / sampleflights[3,8]
# Rounding AK_ratio to the correct number of significant figures, 3
PAK <- signif(AK_ratio, digits = 3)
# Rounding AK_ratio to the correct number of significant figures, 3
PAW <- signif(AW_ratio, digits = 3)
# Probability of delay for airline Alaska
AK_ratio <- sampleflights[2,8] / sampleflights[1,8]
# Probability of delay for airline AM West
AM_ratio <- sampleflights[4,8] / sampleflights[3,8]
# Rounding AK_ratio to the correct number of significant figures, 3
PAK <- signif(AK_ratio, digits = 3)
# Rounding AK_ratio to the correct number of significant figures, 3
PAW <- signif(AW_ratio, digits = 3)
PAK
(PAK*100)
(PAW*100)
PAW
# Probability of delay for airline AM West
AM_ratio <- sampleflights[4,8] / sampleflights[3,8]
# Probability of delay for airline Alaska
AK_ratio <- sampleflights[2,8] / sampleflights[1,8]
# Probability of delay for airline AM West
AM_ratio <- sampleflights[4,8] / sampleflights[3,8]
# Rounding AK_ratio to the correct number of significant figures, 3
PAK <- signif(AK_ratio, digits = 3)
# Rounding AK_ratio to the correct number of significant figures, 3
PAW <- signif(AM_ratio, digits = 3)
PAM
# Probability of delay for airline Alaska
AK_ratio <- sampleflights[2,8] / sampleflights[1,8]
# Probability of delay for airline AM West
AM_ratio <- sampleflights[4,8] / sampleflights[3,8]
# Rounding AK_ratio to the correct number of significant figures, 3
PAK <- signif(AK_ratio, digits = 3)
# Rounding AK_ratio to the correct number of significant figures, 3
PAM <- signif(AM_ratio, digits = 3)
PAM
(PAM*100)
PAK
(PAK*100)
# Create a new data frame with columns for plotting in ggplot
someflights <- melt(sampleflights)
delays <- someflights %>%
filter(Status == "delayed")
# drop the statitics that are not needed by selecting what is
delays <- delays[1:10,]
# Creating a data frame with delays for Alaska
AK_delays <- delays %>%
filter(Airline == "Alaska")
# Creating a data frame with delays for AW West
AM_delays <- delays %>%
filter(Airline == "AM West")
# plotting delays for each location
barplot(AK_delays$value, horiz = FALSE, names.arg = AK_delays$variable, main = "Alaska Airline Delays", sub = "For Selected Arrival Destinations", col = AK_delays$variable)
barplot(AM_delays$value, horiz = FALSE, names.arg = AM_delays$variable, main = "AM West Airline Delays", sub = "For Selected Arrival Destinations", col = AM_delays$variable)
barplot(delays$value, col = delays$Airline)
barplot(delays$value, col = delays$variable)
barplot(delays$value, col = delays$variable, legend = delays$Airline)
barplot(delays$value, col = delays$variable, legend = delays$Airline, beside = TRUE)
barplot(delays$value, col = delays$variable, legend = delays$Airline, below = TRUE)
barplot(delays$value, col = delays$variable, legend = delays$Airline, above = TRUE)
ggplot(data = delays, aes( x = values) )
ggplot(data = delays, aes( x = values) ) + geom_bar()
ggplot(data = delays, aes( x = value) ) + geom_bar()
ggplot(data = delays, aes( x = value) ) + geom_point()
ggplot(data = delays, aes(x = Airline, y = value) ) + geom_point()
ggplot(data = delays, aes(x = Airline, y = value) ) + geom_boxplot()
barplot(delays$value, col = delays$variable, legend = delays$Status, beside = TRUE)
barplot(delays$value, col = delays$variable, legend = delays$variable, beside = TRUE)
barplot(delays$value, col = delays$Airline, main = "Airline Arrival Delays", xlab = "Arrival Location")
barplot(delays$value, col = c("Red", "Blue"), main = "Airline Arrival Delays", xlab = "Arrival Location")
barplot(delays$value, col = c("Red", "Blue"),  main = "Airline Arrival Delays", xlab = "Arrival Location", legend = rownames(delays$Airline)
barplot(delays$value, col = c("Red", "Blue"),  main = "Airline Arrival Delays", xlab = "Arrival Location", legend = rownames(delays$Airline)
barplot(delays$value, col = c("Red", "Blue"),  main = "Airline Arrival Delays", xlab = "Arrival Location", legend = rownames(delays$Airline))
barplot(delays$value, col = c("Red", "Blue"),  main = "Airline Arrival Delays", xlab = "Arrival Location", legend = rownames(delays$Airline), beside = TRUE)
barplot(delays$value, col = c("Red", "Blue"),  main = "Airline Arrival Delays", xlab = "Arrival Location", legend = rownames(delays$Airline), beside = TRUE)
barplot(delays$value, col = c("Red", "Blue"),  main = "Airline Arrival Delays", xlab = "Arrival Location", legend = "Red", beside = TRUE)
barplot(delays$value, col = c("Red", "Blue"),  main = "Airline Arrival Delays", xlab = "Arrival Location", legend = c("Alaska","AM West"), beside = TRUE)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
barplot(delays$value, col = c("Red", "Blue"),  main = "Airline Arrival Delays", xlab = "Arrival Locations", legend = c("Alaska","AM West"), beside = TRUE, sub = "5 Airports of LAX, PHX, SAN, SFO, & SEA")
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="red", fill="orange", alpha=0.2) +
theme(minimal)
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="red", fill="orange", alpha=0.2) +
theme_minimal()
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="red", fill="orange", alpha=0.2) +
theme_bc()
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="red", fill="orange", alpha=0.2) +
theme_bw()
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.2) +
theme_bw()
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.2) +
theme_bw() + ylab = "Delays"
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.2) +
theme_bw() +
labs( y ="Delays")
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.2) +
theme_light() +
labs( y ="Delays")
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.2) +
theme_light() +
labs( y ="Delays")
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.2) +
theme_dark() +
labs( y ="Delays")
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.2) +
theme_light() +
labs( y ="Delays")
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.2) +
theme_light() +
labs(title = "Distribution of Airline Delays", subtitle = "With Selected Airlines" y ="Delays", caption = "Source: Numbersense, Kaiser Fung, McGraw Hill, 2013")
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.2) +
theme_light() + labs(title = "Distribution of Airline Delays", subtitle = "With Selected Airlines" y ="Delays", caption = "Source: Numbersense, Kaiser Fung, McGraw Hill, 2013")
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.5) + labs(title = "Distribution of Airline Delays", subtitle = "With Selected Airlines", y ="Delays", caption = "Source: Numbersense, Kaiser Fung, McGraw Hill, 2013")
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.5) + labs(title = "Distribution of Airline Delays", subtitle = "With Selected Airlines", y ="Delays", caption = "Source: Numbersense, Kaiser Fung, McGraw Hill, 2013")
+ theme_light()
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.5) + labs(title = "Distribution of Airline Delays", subtitle = "With Selected Airlines", y ="Delays", caption = "Source: Numbersense, Kaiser Fung, McGraw Hill, 2013") + theme_light()
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.5) + labs(title = "Distribution of Airline Delays", subtitle = "With Selected Airlines", y ="Delays", caption = "Source: Numbersense, Kaiser Fung, McGraw Hill, 2013" align = center ) + theme_light()
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.5) + labs(title = "Distribution of Airline Delays", subtitle = "With Selected Airlines", y ="Delays", caption = "Source: Numbersense, Kaiser Fung, McGraw Hill, 2013" align = center ) + theme_light(plot.title = element_text(hjust = 0.5)
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.5) + labs(title = "Distribution of Airline Delays", subtitle = "With Selected Airlines", y ="Delays", caption = "Source: Numbersense, Kaiser Fung, McGraw Hill, 2013") + theme_light(plot.title = element_text(hjust = 0.5)
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.5) + labs(title = "Distribution of Airline Delays", subtitle = "With Selected Airlines", y ="Delays", caption = "Source: Numbersense, Kaiser Fung, McGraw Hill, 2013") + theme_light(plot.title = element_text(hjust = 0.5))
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.5) +
labs(title = "Distribution of Airline Delays", subtitle = "With Selected Airlines",
y ="Delays", caption = "Source: Numbersense, Kaiser Fung, McGraw Hill, 2013") +
theme_light(plot.title = element_text(hjust = 0.5))
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.5) +
labs(title = "Distribution of Airline Delays", subtitle = "With Selected Airlines",
y ="Delays", caption = "Source: Numbersense, Kaiser Fung, McGraw Hill, 2013") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.5) +
labs(title = "Distribution of Airline Delays", subtitle = "With Selected Airlines",
y ="Delays", caption = "Source: Numbersense, Kaiser Fung, McGraw Hill, 2013") +
theme(plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.5) +
labs(title = "Distribution of Airline Delays", subtitle = "With Selected Airlines",
y ="Delays", caption = "Source: Numbersense, Kaiser Fung, McGraw Hill, 2013") +
theme(plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
theme_classic()
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.5) +
labs(title = "Distribution of Airline Delays", subtitle = "With Selected Airlines",
y ="Delays", caption = "Source: Numbersense, Kaiser Fung, McGraw Hill, 2013") +
theme(plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
theme_light()
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.5) +
labs(title = "Distribution of Airline Delays", subtitle = "With Selected Airlines",
y ="Delays", caption = "Source: Numbersense, Kaiser Fung, McGraw Hill, 2013") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
ggplot(data = delays, aes(x = Airline, y = value) ) +
geom_boxplot(color="Dark Blue", fill="Light Blue", alpha=0.5) +
labs(title = "Distribution of Airline Delays", subtitle = "With Selected Airlines",
y ="Delays", caption = "Source: Numbersense, Kaiser Fung, McGraw Hill, 2013") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
